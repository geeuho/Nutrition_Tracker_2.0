{"version":3,"sources":["services/Api.js","components/NavBar.js","components/WeightGraph.js","containers/ProfilePage.js","components/About.js","components/Login.js","components/SignUp.js","containers/CalendarPage.js","components/NoteForm.js","components/FoodCard.js","components/FoodList.js","components/ExerciseCard.js","components/ExerciseList.js","components/NoteCard.js","components/NoteList.js","components/Graphs.js","containers/DayPage.js","containers/TodayPage.js","containers/PostPage.js","containers/PostExercise.js","containers/PostNote.js","containers/PostFood.js","components/EditExercise.js","components/EditNote.js","components/EditFood.js","components/EditUser.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","headers","Accepts","localStorage","getItem","query","fetch","method","body","JSON","stringify","then","response","json","user","gender","weight","height","age","food","meal","date","time","food_post","name","food_name","calories","nf_calories","fat","nf_total_fat","protein","nf_protein","carbs","nf_total_carbohydrate","potassium","nf_potassium","sugar","nf_sugars","sodium","nf_sodium","saturated_fat","nf_saturated_fat","cholesterol","nf_cholesterol","dietary_fiber","nf_dietary_fiber","user_id","id","note","image","photo","highres","res","exercise","exercise_post","subject","text","console","log","current_weight","username","password","password_confirmation","passwordConfirmation","first_name","last_name","diet_type","email","calorie_goal","bio","userId","fields","newDate","Date","unit","unit_number","NavBar","props","loggedIn","currentUser","className","to","onClick","handleLogout","WeightGraph","state","posted","timeline","this","graph","dataArray","curr","month","getMonth","weekDays","getFullYear","i","first","getDate","getDay","setDate","toISOString","slice","push","graphTitle","weights","forEach","element","data","weekArray","find","length","unshift","filter","split","year","parseInt","sortedArray","sort","a","b","parseFloat","join","width","chartType","loader","options","title","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","rootProps","Component","ProfilePage","capitalize","word","charAt","toUpperCase","deleteUser","window","confirm","api","alert","history","editUser","pathname","handleChange","e","newField","target","value","setState","handleSubmit","preventDefault","current_user","handleYear","children","graph_type","attributes","userWeights","userData","yearSelect","src","onSubmit","type","onChange","placeholder","Home","Login","newFields","message","error","handleLogin","SignUp","signUpInfo","CalendarPage","dateLink","currentDate","weekFoodData","weekExerciseData","newData","getWeek","foodData","array","filteredFoods","map","filteredExercises","sum","reduce","total","Note","event","FoodCard","deleteFood","deleted","editFood","prop","noteStatus","noteButton","NoteForm","FoodList","foods","key","ExerciseCard","deleteExercise","editExercise","ExerciseList","exercises","NoteCard","deleteNote","editNote","NoteList","notes","Graphs","exerciseData","fatSum","carbSum","proteinSum","potassiumSum","sugarSum","sodiumSum","saturatedFatSum","dietaryFiberSum","cholesterolSum","allCalorieData","sortedCalorieData","newTime","maxValue","DayPage","dayExercises","breakfastFoods","lunchFoods","dinnerFoods","dayNotes","params","match","dateParams","fatHash","proteinHash","carbHash","caloriesHash","potassiumHash","sugarHash","sodiumHash","saturated_fatHash","dietary_fiberHash","cholesterolHash","foodgraphs","caloriesBurned","todayExercises","todayNotes","today","PostPage","handleMenu","postNote","postState","postFood","getHours","getMinutes","getSeconds","postExercise","menu","link","foodInput","exerciseInput","PostExercise","location","PostNotePage","ExerciseEdit","editState","NoteEdit","FoodEdit","EditUser","App","setItem","jwt","removeItem","exact","path","render","About","currentuser","TodayPage","PostFood","PostNote","EditFood","EditExercise","EditNote","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7b5efd6.chunk.js","sourcesContent":["const API_ROOT = `https://nutrition-tracker-7.herokuapp.com/api/v1/`;\n\nlet token = localStorage.getItem(\"token\")\n\nconst headers = {\n  'Content-Type': 'application/json',\n  Accepts: 'application/json',\n  \"Authorization\": token\n};\n\nconst nutritionixGetFood = (query) => {\n    return fetch(`https://trackapi.nutritionix.com/v2/natural/nutrients`, {\n        method: `POST`,\n        headers: {\n          'content-type': 'application/json',\n          'x-app-id': '5abf948d',\n          'x-app-key': '47c1f26a3b33cec73d5a0862b176fa69'\n        },\n        body: JSON.stringify({\n            \"query\": query\n        })\n    })\n    .then(response => response.json())\n}\n\nconst nutritionixGetExercise = (query, user) => {\n    return fetch(`https://trackapi.nutritionix.com/v2/natural/exercise`, {\n        method: `POST`,\n        headers: {\n          'content-type': 'application/json',\n          'x-app-id': '5abf948d',\n          'x-app-key': '47c1f26a3b33cec73d5a0862b176fa69'\n        },\n        body: JSON.stringify({\n            \"query\": query,\n            \"gender\": user.gender,\n            \"weight_kg\": (user.weight / 2.2046),\n            \"height_cm\": (user.height * 2.54),\n            \"age\": user.age\n        })\n    }).then(response => response.json())\n}\n\nconst postUserFood = (food, user, meal, date, time) => {\n    return fetch(`${API_ROOT}food_posts`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            food_post: {\n                name: food.food_name,\n                calories: food.nf_calories,\n                fat: food.nf_total_fat,\n                protein: food.nf_protein,\n                carbs: food.nf_total_carbohydrate,\n                potassium: food.nf_potassium,\n                sugar: food.nf_sugars,\n                sodium: food.nf_sodium,\n                saturated_fat: food.nf_saturated_fat,\n                cholesterol: food.nf_cholesterol,\n                dietary_fiber: food.nf_dietary_fiber,\n                user_id: user.id,\n                meal: meal,\n                note: '',\n                date: date,\n                time: time,\n                image: food.photo.highres\n            }\n        })\n    }).then(res => res.json())\n}\n\nconst postUserExercise = (exercise, user, date, time) => {\n    return fetch(`${API_ROOT}exercise_posts`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            exercise_post: {\n                name: exercise.name,\n                calories: exercise.nf_calories,\n                user_id: user.id,\n                note: '',\n                date: date,\n                time: time,\n                image: exercise.photo.highres,\n\n            }\n        })\n    }).then(res => res.json())\n}\n\nconst postUserNote = (subject, text, user, date) => {\n   \n    return fetch(`${API_ROOT}notes`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            subject: subject,\n            text: text,\n            date: date,\n            user_id: user.id\n        })\n    }).then(res => res.json())\n}\n\nconst postUserWeight = (user, weight, date) =>{\n    console.log(user, weight, date)\n    return fetch(`${API_ROOT}weights`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            user_id: user.id,\n            date: date,\n            current_weight: weight\n        })\n    }).then(res => res.json())\n}\n\nconst editUser = (fields, id) => {\n    return fetch(`${API_ROOT}users/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            username: fields.username,\n            weight: fields.weight,\n            height: fields.height,\n            calorie_goal: fields.calorie_goal,\n            diet_type: fields.diet_type,\n            image: fields.image,\n            bio: fields.bio,\n          \n        })\n    }).then(res => res.json())\n}\n\nconst editUserExercise = (fields, id) => {\n    let newDate = new Date()\n    console.log(newDate)\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            name: fields.name,\n            calories: fields.calories,\n            unit: fields.unit,\n            unit_number: fields.unit_number\n        })\n    }).then(res => res.json())\n}\n\nconst editUserFood = (fields, id) => {\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            name: fields.name,\n            calories: fields.calories,\n            fat: fields.fat,\n            protein: fields.protein,\n            carbs: fields.carbs,\n            potassium: fields.potassium,\n            sugar: fields.sugar,\n            sodium: fields.sodium,\n            saturated_fat: fields.saturated_fat,\n            cholesterol: fields.cholesterol,\n            dietary_fiber: fields.dietary_fiber\n        })\n    }).then(res => res.json())\n}\n\nconst editUserNote = (fields, id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}notes/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            subject: fields.subject,\n            text: fields.text\n        })\n    }).then(res => res.json())\n}\n\nconst editFoodNote = (fields, id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            note: fields.note\n        })\n    }).then(res => res.json())\n}\n\nconst editExerciseNote = (fields, id) => {\n    console.log(id)\n    console.log(fields)\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            note: fields.note\n        })\n    }).then(res => res.json())\n}\n\nconst deleteUser= (id) => {\n    return fetch(`${API_ROOT}users/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserExercise = (id) => {\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserFood= (id) => {\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserNote = (id) => {\n    return fetch(`${API_ROOT}notes/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst getUserFoods = (userId, date) => {\n    // console.log(userId, date)\n    return fetch(`${API_ROOT}food_posts?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserExercises = (userId, date) => {\n    // console.log(userId, date)\n    return fetch(`${API_ROOT}exercise_posts?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserNotes = (userId, date) => {\n    console.log(userId, date)\n    return fetch(`${API_ROOT}notes?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserWeights = (id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}weights?user_id=${id}`,\n    {\n       headers: headers \n    }).then(response => response.json())\n}\n\nconst getUser = (id) => {\n    return fetch(`${API_ROOT}users/${id}`, {headers: headers})\n    .then(res => res.json())\n}\n\nconst getCurrentUser = () => {\n    return fetch(`${API_ROOT}current_user`, {\n      headers: headers\n    }).then(res => res.json());\n  };\n\nconst signUp = (user) => {\n    return fetch(`${API_ROOT}users`, {\n      method: `POST`,\n      headers: headers,\n      body: JSON.stringify({ \n          user: {\n              username: user.username, \n              password: user.password, \n              password_confirmation: user.passwordConfirmation, \n              first_name: user.first_name,\n              last_name: user.last_name,\n              image: user.image,\n              age: user.age,\n              diet_type: user.diet_type,\n              weight: user.weight,\n              height: user.height,\n              email: user.email,\n              calorie_goal: user.calorie_goal,\n              bio: user.bio,\n              gender: user.gender\n            } \n        })\n    }).then(res => res.json());\n  };\n  \nconst login = (username, password) => {\n    return fetch(`${API_ROOT}login`, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({ user: {username, password} })\n    }).then(res => res.json());\n};\n\n\nexport default {\n    nutritionixGetFood,\n    nutritionixGetExercise,\n    postUserFood,\n    postUserExercise,\n    postUserNote,\n    postUserWeight,\n    signUp,\n    login,\n    getCurrentUser,\n    getUser,\n    getUserFoods,\n    getUserExercises,\n    getUserNotes,\n    getUserWeights,\n    editUser,\n    editUserExercise,\n    editUserFood,\n    editUserNote,\n    editFoodNote,\n    editExerciseNote,\n    deleteUser,\n    deleteUserExercise,\n    deleteUserFood,\n    deleteUserNote\n} ","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nfunction NavBar(props) {\n    let loggedIn = !!props.currentUser.id\n\n    return (\n        \n        <div className=\"navBar\">\n            \n            <ul>\n               \n            {loggedIn ? (  \n                <div>\n                    <li className= \"nav\">Nutrition Tracker</li>\n                \n                    <li className=\"nav\"><NavLink to='/Nutrition_Tracker_2.0_frontend/todaypage'>Today</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/calendar\">Calendar</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/profile\">Profile</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/about\">About</NavLink></li> \n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/post\">Post</NavLink></li> \n                    <li className=\"navLogout\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/about\" onClick={props.handleLogout}>Logout</NavLink> </li> \n                </div>\n                \n            ) : (\n                <div>\n                    <li className= \"nav\">Nutrition Tracker</li>\n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/login\">Login</NavLink></li> \n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/signup\">Signup</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/Nutrition_Tracker_2.0_frontend/about\">About</NavLink></li> \n                </div>\n             )}\n            </ul>\n        </div>\n    )\n}\n\nexport default NavBar","import React, { Component } from 'react'\nimport { Chart } from \"react-google-charts\";\n// import api from '../services/Api.js'\n\nexport class WeightGraph extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            posted: false,\n            timeline: props\n        }\n    }\n\n    render(){\n        console.log(this.props, this.props.timeline)\n        let dataArray = []\n        let curr = new Date();\n        let month = curr.getMonth() + 1\n        let year = curr.getFullYear()\n        let weekDays = []\n        \n        for(let i = 0; i < 7; i++){\n            let first = curr.getDate() - curr.getDay() + i \n            console.log(first)\n            let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n            weekDays.push(date)\n            \n        }\n        console.log(weekDays)\n        // dataArray.push([\"3/23\", 0])\n        let graph \n        let graphTitle = \"Weight Recordings\"\n        if(!!this.props.user && !!this.props.weights){\n            console.log(this.props)\n            // graph = \"Loading\"\n            this.props.weights.forEach(element => {\n                let data = []\n                data.push(element.date)\n                data.push(element.current_weight)\n                dataArray.push(data)\n            })\n          \n            \n            if(!this.props.timeline || (!!this.props.timeline && this.props.timeline === \"week\")){\n                let weekArray = []\n                for(let i = 0; i < dataArray.length; i++){\n                    if ((!!weekDays.find(element => element === dataArray[i][0]) === true)){\n                        weekArray.push(dataArray[i])\n                    }   \n                }\n                dataArray = weekArray\n\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                console.log(dataArray)\n\n                graphTitle = 'This Week\\'s Weight Records'\n            } else if(!!this.props.timeline && this.props.timeline === \"month\") {\n                dataArray = dataArray.filter(element => {\n                    return element[0].split(\"-\")[1] == month;\n                })\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                graphTitle = 'This Month\\'s Weight Records'\n            } else if(!!this.props.year){\n                console.log(parseInt(this.props.year, 10))\n                dataArray = dataArray.filter(element => {\n                    return element[0].split(\"-\")[0] == parseInt(this.props.year, 10);\n                })\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                graphTitle = 'This Year\\'s Weight Records'\n                \n            } \n\n        } \n        if(!dataArray[1]){\n            graph = \"No Data!\"\n        } else {\n            let sortedArray = dataArray.sort((a, b) => {\n                console.log(parseFloat(a[0].split(\"-\").join(\"\")), b[1])\n                return parseFloat(a[0].split(\"-\").join(\"\")) - parseFloat(b[0].split(\"-\").join(\"\"))\n                        // return a[1] - b[1]\n            })\n            \n            graph = \n                <Chart\n                    width={'1285px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data = {sortedArray}\n                    // *Example Data*\n                    // [\"Nutrient\", \"Overall Calorie Intake\"],\n                    // [\"3/23\", 0],\n                    // [\"3/24\", 1072.75],\n                    // [\"3/25\", 0],\n                    // [\"3/26\", 0],\n                    // [\"3/27\", 0],\n                    // [\"3/28\", 0],\n                    // [\"3/29\", 0]\n                    options={{\n                    title: graphTitle,\n                    hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                    vAxis: { title: 'Calories', minValue: 0 },\n                    // For the legend to fit, we make the chart area smaller\n                    chartArea: { width: '50%', height: '70%' },\n                    // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            }\n        //console.log(testArray)\n    \n        return(\n            \n            <div>\n                \n                <br></br>\n                <div className = \"bar-graph-div\">\n                <option></option>\n                {graph}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default WeightGraph\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport WeightGraph from '../components/WeightGraph'\n\nexport default class ProfilePage extends Component {\n    constructor(){\n        super()\n        this.state = {\n            current_user: null,\n            fields: [],\n            graph_type: null,\n            weights: null\n        }\n    }\n\n    componentDidMount(){\n        const token = localStorage.getItem('token');\n        if (token) {\n            api.getCurrentUser().then(json => {\n            let user = json.user.data.attributes;\n            this.setState({\n                current_user: user\n            })\n            console.log(this.state.current_user)\n                api.getUserWeights(user.id).then(json => {\n                    let userWeights = []\n                    console.log(json.data)\n                    json.data.forEach(element => userWeights.push(element.attributes))\n                    this.setState({\n                        weights: userWeights\n                    })\n                    console.log(this.state.weights)\n                })\n            })\n            \n        }\n    }\n\n    capitalize = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n\n    deleteUser = () => {\n        let answer = window.confirm(\"Are you sure? This will delete all of your posts.\")\n        if (answer) {\n            api.deleteUser(this.props.currentUser.id)\n            .then(json => { console.log(json) })\n            alert(\"Deleted!\")\n            this.props.handleLogout()\n            this.props.history.push('/about')\n        } \n    }\n\n   \n    editUser = () => {\n        this.props.history.push({\n            pathname: \"/edituser\",\n            state: {\n                id: this.props.currentUser.id\n            },\n            \n        })\n    }\n\n    handleChange = (e) => {\n        let newField = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newField\n        })\n        console.log(this.state.fields)\n    }\n\n    handleSubmit = (e) => {\n        console.log(this.props.currentUser.id, parseInt(this.state.fields.weight,10), this.state.fields.date)\n        e.preventDefault()\n        api.postUserWeight(this.state.current_user, parseInt(this.state.fields.weight, 10), this.state.fields.date)\n        .then(json => console.log(json))\n    }\n\n    handleYear = (e)=> {\n        e.preventDefault();\n      \n        this.setState({\n            year: e.target.children[0].value\n        })\n\n    }\n\n    render() {\n        let userData \n        let user\n        let current_user\n        let yearSelect\n            if(!!this.state.current_user){\n                // console.log(this.state.current_user)\n                let image \n                current_user = this.state.current_user\n                if(!!this.state.current_user.image){\n                    image = this.state.current_user.image\n                } else {\n                    image = \"https://clipartart.com/images/default-profile-picture-clipart-3.jpg\"\n                }\n                user = this.capitalize(this.state.current_user.first_name)\n                userData = \n                <div>\n                    <p>User Info</p>\n                    <div>\n                        <img width = \"350px\" src ={image}></img>\n                    </div>\n                    <p>Age: {this.state.current_user.age}</p>\n                    <p>Weight: {this.state.current_user.weight} pounds</p>\n                    <p>Height: {this.state.current_user.height} inches</p>\n                    <p>Calorie Goal: {this.state.current_user.calorie_goal}</p>\n                    <p>Diet: {this.state.current_user.diet_type}</p>\n                    <p>Bio: {this.state.current_user.bio}</p>\n                </div>\n                if(this.state.fields.timeline === \"year\"){\n                    yearSelect = \n                    <div>\n                        <h2>Enter a Year</h2>\n                        <div>\n                            <form onSubmit = {this.handleYear}>\n                                <input type= \"integer\"></input>\n                                <input type = \"submit\"></input>\n                            </form>\n                        </div>      \n                    </div>\n                } else {\n                    yearSelect = <div></div>\n                }\n            } else {\n                userData = 'Loading...'\n            }\n\n            \n\n        return (\n            <div>\n                <br></br>\n                <h1>Welcome {user}</h1>\n                <br></br>\n                    <div className = \"exercise-plan-container\">\n                        <div>\n                        <h3>{userData}</h3>\n                        </div>\n                        <button className=\"secondary-bttn\" onClick = {this.editUser}>Edit Profile</button>\n                        <button className=\"secondary-bttn\" onClick = {this.deleteUser}>Delete Account</button>\n                    </div>\n                    <div className = \"exercise-plan-container\">\n                    <h1>Weight tracker</h1>\n                    <h2>Enter your weight</h2>\n                    <form onSubmit = {(e) => this.handleSubmit(e)}>\n                        <label>\n                            Date:\n                        </label>\n                        <input name = \"date\" type = \"date\" onChange = {this.handleChange}>\n                        </input>\n                        <br></br>\n                        <label>\n                            Weight:\n                        </label>\n                        <input name = \"weight\" type = \"number\" placeholder = \"Enter weight!\" onChange = {this.handleChange}>\n                        </input>\n                        <br></br>\n                        <input type =\"submit\"></input>\n                    </form>\n                    <br></br>\n                    </div>\n                    <div className = \"exercise-plan-container\">\n                        <h2>Select a timeline</h2>\n                        <select name = \"timeline\" onChange = {(e) => this.handleChange(e)}>\n                            <option value = \"\">Select a Timeline</option>\n                            <option value = \"week\">Week</option>\n                            <option value = \"month\">Month</option>\n                            <option value = \"year\">Year</option>\n                        </select>\n                        {yearSelect}\n\n                        <WeightGraph weights = {this.state.weights} user = {current_user} timeline = {this.state.fields.timeline} year = {this.state.year}/>\n                    </div>\n\n                <br></br>\n                \n            </div>\n                \n        )\n    }\n}\n\n","import React, { Component } from 'react'\n// import api from '../services/Api'\n\nexport class Home extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>About Us</h1>\n                <div className = \"exercise-plan-container\">\n                    <div className = \"exercise-plan-display\">\n                    <h3>Welcome to Nutrition Tracker 2.0</h3>\n                    <p>Hello User!</p>\n                    <p> \n                        Nutrition Tracker 2.0 is a nutrition tracking app, which specializes in displaying \n                        vital nutritional information. It's difficult to see the full picture when tracking \n                        nutrition info over time, but with Nutrition Tracker 2.0, you have all of your data organized by days,\n                        weeks, and into graphs that include calorie intake, macronutrients, and everything that would\n                        show up on a typical nutrition facts label. \n\n                    </p>\n                    <p>\n                        Nutrition Tracker 2.0 also utilizes the Nutritionix database, which has access\n                        to nutrition information of almost a million different food items. It also\n                        has access to a vast array of exercise information, so you can track how many\n                        calories you burned on a job or a workout at the gym. Nutrition Tracker\n                        makes use of natural language analysis, so you can type into the input box your exercises and\n                        foods into plain English, and it will convert your input into relevant data. An example sentence \n                        would be something like: \"I ate 2 bananas, and a chicken salad sandwich\".\n                    </p>\n                    <p>\n                        Studies show that there are benefits to keeping track of how many calories\n                        you're consuming and what food you eat. With the help of the NutritionTracker app,\n                        you can easily record and observe important info, to help you make accurate decisions.\n                    </p>\n\n                    </div>\n                    \n                </div>\n                <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class Login extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            error: false,\n            fields: {\n                username:'',\n                password:''\n            }\n        }\n    }\n\n    handleChange = e => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        api.login(this.state.fields.username, this.state.fields.password)\n        .then(json => {\n            console.log(json)\n          if ( json.message === \"Invalid username or password\" ) {\n            this.setState({ error: true })\n            console.log(this.state.error)\n          } else {\n              console.log(json)\n            this.props.handleLogin(json);\n            this.props.history.push('/Nutrition_Tracker_2.0_frontend/todaypage');\n          };\n        });\n      };\n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <div className=\"login\">\n                        <h1> Login:</h1>\n                        {this.state.error ? <h2>Try Again</h2> : null}\n                        <form className=\"loginForm\" onSubmit={this.handleSubmit}>\n                        <label> Username\n                        <input type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <label> Password\n                        <input type=\"password\" name=\"password\" onChange={this.handleChange}/> \n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class SignUp extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {}\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        let signUpInfo = this.state.fields\n        api.signUp(signUpInfo)\n        .then(json => {\n          if ( json.error ) {\n            this.setState({ error: true })\n          } else {\n            this.props.handleLogin(json);\n            this.props.history.push('/Nutrition_Tracker_2.0_frontend/todaypage');\n          };\n        });\n      };\n\n \n\n    render() {\n        return (\n            <div className=\"signup\">\n                <h1> Sign Up</h1>\n                {this.state.error ? <h3>Invalid Inputs, try again</h3> : null}\n                <form className=\"signUpForm\" onSubmit={this.handleSubmit}>\n                    <label> Username\n                    <input type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Password\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label>Confirm Password\n                    <input type=\"password\" name=\"passwordConfirmation\" onChange={this.handleChange}/> <br/>\n                    </label>\n                    <label> First Name\n                    <input type=\"text\" name=\"first_name\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Last Name\n                    <input type=\"text\" name=\"last_name\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Image\n                    <input type=\"text\" name=\"image\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Age\n                    <input type=\"text\" name=\"age\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Diet Type\n                    <input type=\"text\" name=\"diet_type\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Weight\n                    <input type=\"text\" name=\"weight\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Gender\n                    <select name=\"gender\" id=\"gender\" onChange={this.handleChange}>\n                        <option value=\"\"></option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select>\n                    </label> <br/>\n                    <label> Height\n                    <input type=\"text\" name=\"height\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Email\n                    <input type=\"text\" name=\"email\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Daily Calorie Goal\n                    <input type=\"text\" name=\"calorie_goal\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Bio\n                    <input type=\"text\" name=\"bio\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n    )\n    }\n}\n\nexport default SignUp\n","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport { Chart } from \"react-google-charts\";\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport api from '../services/Api'\n\n\n\n\nexport default class CalendarPage extends Component {\n  constructor(){\n    super()\n    this.state = {\n      date: new Date(),\n      weekFoodData: null,\n      weekExerciseData: null\n    }\n  }\n  \n\n  componentDidMount(){\n    const token = localStorage.getItem('token');\n            if (token) {\n                api.getCurrentUser().then(json => {\n                let user = json.user.data.attributes ;\n                let weekFoodData = []\n                let weekExerciseData = []\n                let getWeek = () => {\n                  for(let i = 0; i < 7; i++){\n                      let curr = new Date();\n                      let first = curr.getDate() - curr.getDay() + i \n                      let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n                    \n                      api.getUserFoods(user.id, date)\n                      .then(json => {\n                        \n                        json.data.forEach(data => {\n                          let newData= {}\n                          newData[\"date\"] = date\n                          newData[\"calories\"] = data.attributes.calories\n                          weekFoodData.push(newData)\n                         \n                        })\n                        this.setState({\n                          weekFoodData: weekFoodData\n                        })\n                        // console.log(this.state.weekFoodData)\n                      })\n\n                      api.getUserExercises(user.id, date)\n                      .then(json => {\n                        json.data.forEach(data => {\n                          let newData= {}\n                          newData[\"date\"] = date\n                          newData[\"calories\"] = data.attributes.calories\n                          weekExerciseData.push(newData)\n                          \n                        })\n                        this.setState({\n                          weekExerciseData: weekExerciseData\n                        })\n                        console.log(this.state.weekExerciseData)\n                      })\n                      \n                  }\n                  \n                  \n                }\n                getWeek()\n              })\n    }\n    \n  }\n \n  onChange = (date) => {\n    this.dateLink(date)\n    this.setState({ date })\n  }\n\n  dateLink = (date) => {\n    let currentDate = date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate()\n    this.props.history.push(`/daypage/${currentDate}`)\n    console.log(currentDate)\n  }\n\n  render() {\n    let graph\n  if(!this.state.weekExerciseData || !this.state.weekFoodData){\n    graph = \"Loading...\"\n  }\n  else if(!!this.state.weekExerciseData && !!this.state.weekFoodData && !this.state.weekExerciseData[0] && !this.state.weekFoodData[0]){\n    graph = \"No Data Posted!\"\n  } else {\n    let today = new Date();\n    // let day = today.getDay();\n    let foodData = []\n    foodData.push(['Nutrient', 'Overall Calorie Intake'])\n    for(let i = 0; i < 7; i++){\n      let array = []\n      let curr = new Date\n      let first = curr.getDate() - curr.getDay() + i \n      let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n\n      let filteredFoods = this.state.weekFoodData.filter(food => food.date === date).map(food => food.calories)\n      let filteredExercises = this.state.weekExerciseData.filter(exercise => exercise.date === date).map(exercise => exercise.calories)\n\n      let sum\n      if(!filteredFoods[0] && !filteredExercises[0]){\n        sum = 0\n      }else if(!filteredFoods[0] && !!filteredExercises[0]){\n        sum = filteredExercises.reduce((total, sum) => total + sum) * -1\n      }else if(!!filteredFoods[0] && !filteredExercises[0]){\n        sum = filteredFoods.reduce((total, sum) => total + sum)\n      } else {\n        sum = (filteredFoods.reduce((total, sum) => total + sum)) - (filteredExercises.reduce((total, sum) => total + sum))\n      }// }else {\n      //   let foodSum = filteredFoods.reduce((total, sum) => total +sum)\n      //   let exerciseSum = filteredExercises.reduce((total, sum) => total + sum)\n      //   if()\n\n      // }\n      let newDate = date.split(\"-\")[1] + \"/\" + date.split(\"-\")[2]\n      array.push(newDate)\n      array.push(sum)\n      foodData.push(array)\n      \n    }\n    \n    // console.log(foodData)\n    graph = <div className =\"bar-graph-div\">\n                <Chart\n                    width={'1285px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={foodData}\n                    options={{\n                      title: 'This Week\\'s Calorie Intake Breakdown',\n                      hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                      vAxis: { title: 'Calories', minValue: 0 },\n                      // For the legend to fit, we make the chart area smaller\n                      chartArea: { width: '50%', height: '70%' },\n                      // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n    \n  }\n      \n    \n \n    return (\n      \n      <div className=\"calendar-page\">\n        <div className=\"calendar-div\">\n          <h1>Calendar Page</h1>\n          <div>\n            <Calendar className=\"calendar\"\n              onChange={this.onChange}\n              value={this.state.date}\n            />\n          </div>\n          <div>\n       \n          </div>\n        </div>\n        <div className = \"exercise-plan-container\">\n          <h3>This week's calorie intake (w/ burned calories)</h3>\n          <div className = \"exercise-plan-display\">\n            {graph}\n            \n          </div>\n          \n        </div>\n        <br></br><br></br>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport class Note extends Component {\n    constructor(){\n        super()\n        this.state = {\n            fields: ''\n        }\n    }\n    handleChange = (e) => {\n        this.props.handleChange(e)\n    }\n\n    handleSubmit = (event) => {\n        this.props.handleSubmit(event)\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <label> Note: \n                <input type=\"text\" name=\"note\" onChange= {this.handleChange}/>\n                </label> \n                <input type=\"Submit\" value=\"Submit\"/> \n                \n            </form>\n        )\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport NoteForm from '../components/NoteForm'\n\nexport class FoodCard extends Component {\n    constructor(props) {\n        super();\n        this.state= {\n            deleted: false,\n            noteStatus: false,\n            note: props.food.note,\n            fields: null\n        }\n    }\n    \n    deleteFood = () => {\n        api.deleteUserFood(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true,\n                fields: {}\n            })\n        })\n    }\n\n\n    editFood = () => {\n        this.props.prop.history.push({\n            pathname: \"/editfood\",\n            state: {\n                id: this.props.id,\n                date: this.props.food.date\n            },\n            \n        })\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(this.props.id)\n        if(this.state.fields === null){\n            alert(\"Hey type something!\")\n        } else {\n            api.editFoodNote(this.state.fields, this.props.id)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        noteStatus: true,\n                        note: this.state.fields.note\n                    })\n                })\n        }\n    }\n\n    noteButton = () => {\n        this.setState({\n            note: \"\",\n            fields: null\n        })\n    }\n\n    capitalize = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n\n    render() {\n        let deleted = this.state.deleted\n        let note\n            if(this.state.note === \"\"){\n                note = <NoteForm id ={this.props.food.id} handleChange ={this.handleChange} handleSubmit = {(event) => this.handleSubmit(event)}/>\n            } else {\n                note = <div className =\"food-note\">\n                    <p>Note:</p>\n                    <p>{this.state.note}</p>\n                    <button onClick={this.noteButton}>Edit Note</button>\n                </div>\n            }\n        return (\n            deleted === false ? (\n            <div>\n                <div className=\"input-card\">\n                    <div className =\"input-pic\">\n                        <img height = '250px' width = '250px' src = {this.props.food.image}></img>\n                    </div>\n                    <div height = '700px' width = '700px' className=\"input-text\">\n                        <p>Food Name: {this.capitalize(this.props.food.name)}</p>\n                        <p>Calories Consumed: {this.props.food.calories} calories</p>\n                        <p>Fat: {this.props.food.fat} g</p>\n                        <p>Protein: {this.props.food.protein} g</p>\n                        <p>Carbohydrates: {this.props.food.carbs} g</p>\n                        <div>\n                            {note}\n                        </div>\n                        <br></br>\n                        <button className=\"secondary-bttn\" onClick = {this.editFood}>Edit</button>\n                        <button className=\"secondary-bttn\" onClick ={this.deleteFood}>Delete</button>\n                        <br></br>\n                    </div>\n                </div>\n                <br></br>\n            </div>\n            ) : (\n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default FoodCard\n","import React, { Component } from 'react'\nimport FoodCard from './FoodCard'\n\n\nexport default class FoodList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.foods.map(food => <FoodCard prop = {this.props.props} key = {food.id} id = {food.id} food = {food.attributes} />)}\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport NoteForm from '../components/NoteForm'\n\nexport class ExerciseCard extends Component {\n    constructor(props) {\n        super();\n        this.state= {\n            deleted: false,\n            noteStatus: false,\n            note: props.exercise.note,\n            fields: null\n        }\n    }\n\n    deleteExercise = () => {\n        api.deleteUserExercise(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true\n            })\n        })\n    }\n\n    editExercise = () => {\n        this.props.prop.history.push({\n            pathname: \"/editexercise\",\n            state: {\n                id: this.props.id,\n                date: this.props.exercise.date\n            }\n        })\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(this.props.id)\n        if(this.state.fields === null){\n            alert(\"Hey type something!\")\n        } else {\n            api.editExerciseNote(this.state.fields, this.props.id)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    noteStatus: true,\n                    note: this.state.fields.note\n                })\n            })\n        }\n    }\n\n    noteButton = () => {\n        this.setState({\n            note: \"\",\n            fields: null\n        })\n    }\n\n\n    render() { \n        let deleted = this.state.deleted\n        let note\n        if(this.state.note === \"\"){\n            note = <NoteForm id ={this.props.exercise.id} handleChange ={this.handleChange} handleSubmit = {(event) => this.handleSubmit(event)}/>\n        } else {\n            note = <div className =\"exercise-note\">\n                    <p>Note:</p>\n                    <p>{this.state.note}</p>\n                    <button onClick={this.noteButton}>Edit Note</button>\n                </div>     \n        }\n        return (\n            deleted === false ? (\n            <div>\n                <div className= \"exercise-card\">\n                    <div>\n                        <h1>Map Here!</h1>\n                    </div>\n                    <div className=\"exercise-text\">\n                        <p>Exercise: {this.props.exercise.name}</p>\n                        <p>Calories Burned: {this.props.exercise.calories} calories burned</p>\n                    </div>\n                    <div>\n                        {note}\n                    </div>\n                    <div>\n                        <button className=\"secondary-bttn\" onClick = {this.editExercise}>Edit</button>\n                        <button className=\"secondary-bttn\" onClick = {this.deleteExercise}>Delete</button>\n                    </div>\n                </div>\n            <br></br>\n            </div>\n            ) : (\n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default ExerciseCard\n","import React, { Component } from 'react'\nimport ExerciseCard from './ExerciseCard'\n\nexport class ExerciseList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.exercises.map(exercise => <ExerciseCard prop = {this.props.props} key = {exercise.id} id = {exercise.id} exercise = {exercise.attributes} />)}\n            </div>\n        )\n    }\n}\n\nexport default ExerciseList\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class NoteCard extends Component {\n    constructor() {\n        super();\n        this.state= {\n            deleted: false\n        }\n    }\n\n    deleteNote = () => {\n        api.deleteUserNote(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true\n            })\n        })\n    }\n\n    editNote = () => {\n        this.props.prop.history.push({\n            pathname: \"/editnote\",\n            state: {\n                id: this.props.id,\n                date: this.props.note.date\n            },\n            \n        })\n    }\n\n    render() {\n        let deleted = this.state.deleted\n        return (\n            deleted === false ? (\n            <div>\n                <div className= \"exercise-card\">\n                    <div><h1>Note Here!</h1></div>\n                <div className=\"exercise-text\">\n                    <p>Subject: {this.props.note.subject}</p>\n                    <p>Text: {this.props.note.text}</p>\n                </div>\n                \n                <div>\n                    <button className=\"secondary-bttn\" onClick = {this.editNote}>Edit</button>\n                    <button className=\"secondary-bttn\" onClick ={this.deleteNote}>Delete</button>\n                </div>\n                    <br></br>\n                    \n                </div>\n                <br></br>\n            </div>\n            \n            ) : (   \n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default NoteCard\n","import React, { Component } from 'react'\nimport NoteCard from './NoteCard'\n\nexport class NoteList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.notes.map(note => <NoteCard prop = {this.props.props} key = {note.id} id = {note.id} note = {note.attributes} />)}\n            </div>\n        )\n    }\n}\n\nexport default NoteList\n","import React, { Component } from 'react'\n\n// import CanvasJSReact from '../canvasjs-2.3.2/canvasjs.react'\nimport { Chart } from \"react-google-charts\";\n\n\nexport class Graphs extends Component {\n  constructor(props){\n    super()\n    this.state = {\n      foodData: props.foodData,\n      exerciseData: props.exerciseData\n    }\n  }\n\n    render() {\n      let fatSum = this.state.foodData.fat.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let carbSum = this.state.foodData.carbs.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let proteinSum = this.state.foodData.protein.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let potassiumSum = this.state.foodData.potassium.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let sugarSum = this.state.foodData.sugar.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let sodiumSum = this.state.foodData.sodium.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let saturatedFatSum = this.state.foodData.saturated_fat.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let dietaryFiberSum = this.state.foodData.dietary_fiber.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let cholesterolSum = this.state.foodData.cholesterol.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      console.log(potassiumSum, sugarSum, sodiumSum, saturatedFatSum, dietaryFiberSum, cholesterolSum)\n      // let caloriesBurnedSum = this.state.exerciseData.calories.map(exercise => exercise.data)\n      // .reduce((total, sum) => total + sum)\n\n      let allCalorieData = []\n      allCalorieData.push(['Time', 'Calories Consumed'])\n      let sum = 0\n      console.log(this.state.foodData.calories)\n      // let sortedExerciseData = this.state.exerciseData.calories.map(food => food * -1)\n      let sortedCalorieData = this.state.foodData.calories.sort(function (a, b) {\n  \n        return parseFloat(a.time.split(\":\").join(\"\")) - parseFloat(b.time.split(\":\").join(\"\"));\n      });\n      console.log(parseFloat(this.state.foodData.calories[0].time.split(\":\").join(\"\")))\n      console.log(sortedCalorieData)\n      \n      sortedCalorieData.map(food =>{\n        let data = []\n        let newTime = food.time.split(\":\")[0] + \":\" + food.time.split(\":\")[1]\n        data[0] = newTime\n        data[1] = food.data + sum\n        sum += food.data\n        allCalorieData.push(data)\n      })\n\n      console.log(allCalorieData)\n\n        return (\n            <div>\n              <div className =\"graphs-div\">\n                <div className =\"top-graphs-div\"> \n                  <div className= \"pie-chart-div\">\n                  <Chart\n                        width={'400px'}\n                        height={'400px'}\n                        chartType=\"PieChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={[\n                          ['Macronutrient', 'grams'],\n                          ['Fat (g)', fatSum],\n                          ['Protein (g)' , proteinSum],\n                          ['Carbs (g)', carbSum],\n                        ]}\n                        options={{\n                          title: 'Macronutrients Breakdown',\n                        }}\n                        rootProps={{ 'data-testid': '1' }}\n                      />\n                  </div>\n                  <div className = \"bar-graph-div\">\n             \n                  <Chart\n                    width={'400px'}\n                    height={'400px'}\n                    chartType=\"BarChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                      ['Nutrient', 'Daily Rec.', 'Todays Intake'],\n                      ['Potassium (mg)', 4500, potassiumSum],\n                      ['Cholesterol (mg)', 300, cholesterolSum],\n                      ['Sodium (mg)', 1500, sodiumSum]\n                  \n                    ]}\n                    options={{\n                      title: 'Nutrition Info',\n                      chartArea: { width: '50%' },\n                      hAxis: {\n                        title: 'Total Amount',\n                        minValue: 0,\n                        maxValue: 5000\n                      },\n                      vAxis: {\n                        title: 'Nutrient',\n                      },\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                <div className = \"bar-graph-div\">\n             \n                  <Chart\n                    width={'400px'}\n                    height={'400px'}\n                    chartType=\"BarChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                      ['Nutrient', 'Daily Rec.', 'Todays Intake'],\n                      ['Sugar (g)', 30, sugarSum ],\n                      ['Saturated Fat (g)', 13, saturatedFatSum],\n                      ['Dietary Fiber (g)', 30, dietaryFiberSum]\n                  \n                    ]}\n                    options={{\n                      title: 'Nutrition Info',\n                      chartArea: { width: '50%' },\n                      hAxis: {\n                        title: 'Total Amount',\n                        minValue: 0,\n                        maxValue: 150\n                      },\n                      vAxis: {\n                        title: 'Nutrient',\n                      },\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                \n                \n                <br></br>\n                </div>\n                  <br></br>\n                <div className =\"bar-graph-div\">\n                <Chart\n                    width={'1285px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={allCalorieData}\n                    options={{\n                      title: 'Calories Intake Breakdown',\n                      hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                      vAxis: { title: 'Calories', minValue: 0 },\n                      // For the legend to fit, we make the chart area smaller\n                      chartArea: { width: '50%', height: '70%' },\n                      // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Graphs\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom';\nimport FoodList from '../components/FoodList'\nimport ExerciseList from '../components/ExerciseList'\nimport NoteList from '../components/NoteList'\nimport Graphs from '../components/Graphs'\n\nexport class DayPage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            dayExercises: null,\n            breakfastFoods: null,\n            lunchFoods: null,\n            dinnerFoods: null,\n            dayNotes: null,\n            params: props.match.params,\n            foodData: null,\n            \n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        let dateParams = this.props.match.params\n        console.log(this.props.match.params)\n        const token = localStorage.getItem('token');\n            if (token) {\n                api.getCurrentUser().then(json => {\n                let user = json.user.data.attributes ;\n                    console.log('calendar')\n                    api.getUserFoods(user.id, dateParams.date)\n                    .then(json => {\n                        console.log(json.data)\n                        let breakfastFoods = json.data.filter(food => food.attributes.meal === 'breakfast')\n                        let lunchFoods = json.data.filter(food => food.attributes.meal === 'lunch')\n                        let dinnerFoods = json.data.filter(food => food.attributes.meal === 'dinner')\n                        let foodData = {\n                            fat: json.data.map((food)=>{\n                                let fatHash = {}\n                                fatHash['data'] = food.attributes.fat\n                                fatHash['time'] = food.attributes.time\n                                return fatHash\n                            }),\n                            protein: json.data.map((food)=>{\n                                let proteinHash = {}\n                                proteinHash['data'] = food.attributes.protein\n                                proteinHash['time'] = food.attributes.time\n                                return proteinHash\n                            }),\n                            carbs: json.data.map((food)=>{\n                                let carbHash = {}\n                                carbHash['data'] = food.attributes.carbs\n                                carbHash['time'] = food.attributes.time\n                                return carbHash\n                            }),\n                            calories: json.data.map((food)=>{\n                                let caloriesHash = {}\n                                caloriesHash['data'] = food.attributes.calories\n                                caloriesHash['time'] = food.attributes.time\n                                return caloriesHash\n                            }),\n                            potassium: json.data.map((food)=>{\n                                let potassiumHash = {}\n                                potassiumHash['data'] = food.attributes.potassium\n                                return potassiumHash\n                            }),\n                            sugar: json.data.map((food)=>{\n                                let sugarHash = {}\n                                sugarHash['data'] = food.attributes.sugar\n                                return sugarHash\n                            }),\n                            sodium: json.data.map((food)=>{\n                                let sodiumHash = {}\n                                sodiumHash['data'] = food.attributes.sodium\n                                return sodiumHash\n                            }),\n                            saturated_fat: json.data.map((food)=>{\n                                let saturated_fatHash = {}\n                                saturated_fatHash['data'] = food.attributes.saturated_fat\n                                return saturated_fatHash\n                            }),\n                            dietary_fiber: json.data.map((food)=>{\n                                let dietary_fiberHash = {}\n                                dietary_fiberHash['data'] = food.attributes.dietary_fiber\n                                return dietary_fiberHash\n                            }),\n                            cholesterol: json.data.map((food)=>{\n                                let cholesterolHash = {}\n                                cholesterolHash['data'] = food.attributes.cholesterol\n                                return cholesterolHash\n                            })\n                        }\n                        this.setState({\n                            breakfastFoods: breakfastFoods,\n                            lunchFoods: lunchFoods,\n                            dinnerFoods: dinnerFoods,\n                            foodData: foodData\n                        })\n                        console.log(foodData)\n                    })\n\n                    api.getUserExercises(user.id, dateParams.date)\n                    .then(json => {\n                        console.log(json.data)\n                        let exerciseData = json.data.map(food => food.attributes.calories)\n                        this.setState({\n                            dayExercises: json.data,\n                            exerciseData: exerciseData\n                        })\n                        \n                    })\n                    api.getUserNotes(user.id, dateParams.date)\n                    .then(json => {\n                        console.log(json.data)\n                        this.setState({\n                            dayNotes: json.data\n                        })\n                    })\n                    \n                })\n            }\n    }\n\n    render() {\n        let breakfastFoods\n        let lunchFoods\n        let dinnerFoods\n        let dayExercises\n        let dayNotes\n        let foodgraphs\n        let caloriesBurned\n        let date = this.props.match.params.date\n       \n            if (!!this.state.dayExercises && !this.state.dayExercises[0]){\n                dayExercises = \"No Exercises Posted\"\n            } else if(!!this.state.dayExercises && !!this.state.dayExercises[0]){\n                dayExercises = <ExerciseList props = {this.props} exercises = {this.state.dayExercises}/>\n            } \n\n            if (!!this.state.breakfastFoods && !this.state.breakfastFoods[0]){\n                breakfastFoods = \"No Breakfast Items Posted\"\n            } else if(!!this.state.breakfastFoods && !!this.state.breakfastFoods[0]){\n                console.log(this.state.breakfastFoods)\n                breakfastFoods = <FoodList props = {this.props} foods ={this.state.breakfastFoods}/>\n            } \n            \n            if (!!this.state.lunchFoods && !this.state.lunchFoods[0]){\n                lunchFoods = \"No Lunch Items Posted\"\n            } else if(!!this.state.lunchFoods && !!this.state.lunchFoods[0]){\n                console.log(this.state.lunchFoods)\n                lunchFoods = <FoodList props = {this.props} foods ={this.state.lunchFoods}/>\n            } \n\n            if (!!this.state.dinnerFoods && !this.state.dinnerFoods[0]){\n                dinnerFoods = \"No Dinner Items Posted\"\n            } else if(!!this.state.dinnerFoods && !!this.state.dinnerFoods[0]){\n                console.log(this.state.dinnerFoods)\n                dinnerFoods = <FoodList props = {this.props} foods ={this.state.dinnerFoods}/>\n            } \n\n            if (!!this.state.dayNotes && !this.state.dayNotes[0]){\n                dayNotes = \"No Notes Posted\"\n            } else if(!!this.state.dayNotes && !!this.state.dayNotes[0]){\n                dayNotes = <NoteList props = {this.props} notes = {this.state.dayNotes}/>\n            } \n\n\n            if(!this.state.foodData){\n                foodgraphs = \"Loading\"\n            } else if (!!this.state.foodData && !this.state.foodData.calories[0]){\n                foodgraphs = <h3>No Foods Posted</h3>\n            } else {\n                foodgraphs = <Graphs exerciseData = {this.state.exerciseData} foodData = {this.state.foodData}/>\n            }\n\n            if(!this.state.exerciseData){\n                caloriesBurned = \"Loading\"\n            } else if (!!this.state.exerciseData && !this.state.exerciseData[0]){\n                caloriesBurned = \"No Exercises Posted\"\n            } else {\n                let sum = this.state.exerciseData.reduce((total, sum) => total + sum)\n                caloriesBurned = `${sum} calories`\n            }\n        return (\n\n        <div>\n            <h1>{date}</h1>  \n            <div className=\"top-section\">\n                <div className =\"graph-section\">\n                    <h2>Graphs</h2>\n                    {foodgraphs}\n                    <div>\n                  <div className =\"exercise-data-div\">\n                    <h1>Calories Burned Today:</h1>\n                    <h3>{caloriesBurned}</h3>\n                  </div>\n                </div>\n                </div>\n            </div>\n\n            <div className = \"track-container-meal\">\n                <div className = \"track-box\">\n                    <div className=\"food-header\">\n                        <h3>Breakfast</h3>\n                        <div className=\"food-add\">\n                            <Link className=\"primary-bttn\" to={{pathname: '/postFood',\n                                state: {\n                                    date: this.props.match.params,\n                                    meal: 'breakfast'\n                                }\n                            }}>+</Link> \n                        </div>\n                    </div>\n                    <div className=\"displayFood\">\n                        {breakfastFoods}\n                    </div> \n                </div>\n        \n                <div className=\"track-box\">\n                    <div className= \"food-header\">\n                        <h3>Lunch</h3>\n                        <div className=\"food-add\">\n                            <Link className =\"primary-bttn\" to={{pathname: '/postFood',\n                                state: {\n                                    date: this.props.match.params,\n                                    meal: 'lunch'\n                                }\n                            }}>+</Link>\n                        </div>\n                    </div>\n                    <div className=\"displayFood\">\n                        {lunchFoods}\n                    </div>\n                </div>\n\n                <div className=\"track-box\">\n                    <div className= \"food-header\">\n                        <h3>Dinner</h3>\n                        <div className=\"food-add\">\n                            <Link className = \"primary-bttn\" to={{pathname: '/postFood',\n                                state: {\n                                    date: this.props.match.params,\n                                    meal: 'dinner'\n                                }\n                            }}> + </Link>\n                        </div>\n                    </div>\n                    <div className=\"displayFood\">\n                        {dinnerFoods}\n                    </div>\n                </div>\n            </div>\n\n            <div className= \"track-container-exercise\">\n                        <div className=\"track-box\">\n                            <h2>Exercise Entries</h2>\n                            <div className=\"displayExercise\">\n                                {dayExercises}\n                            </div>\n                            <br></br>\n                            <Link className=\"primary-bttn\" to={{pathname: '/postExercise',\n                                state: {\n                                    date: this.props.match.params\n                                }\n                            }}>Post Exercise</Link>\n                            \n                </div>\n            </div>\n\n            <div className = \"track-container\">\n                <div className=\"track-box\">\n                    <h2>Notes</h2>\n                    <div className=\"displayNote\">\n                        {dayNotes}\n                    </div>\n                    <br></br>\n                    <Link className = \"primary-bttn\" to={{pathname: '/postNote',\n                        state: {\n                            date: this.props.match.params\n                        }\n                    }}>Post Note</Link>\n                    <br></br>\n                </div>\n                \n            </div>\n            <br></br><br></br>\n        </div>\n        )\n    }\n}\n\nexport default DayPage\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom';\nimport FoodList from '../components/FoodList'\nimport ExerciseList from '../components/ExerciseList'\nimport NoteList from '../components/NoteList'\nimport Graphs from '../components/Graphs'\n\nexport class DayPage extends Component {\n    constructor(){\n        super()\n        this.state = {\n            todayExercises: null,\n            breakfastFoods: null,\n            lunchFoods: null,\n            dinnerFoods: null,\n            todayNotes: null,\n            foodData: null,\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        let today = new Date()\n        let currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()\n        console.log(currentDate)\n        const token = localStorage.getItem('token');\n            if (token) {\n                api.getCurrentUser().then(json => {\n                let user = json.user.data.attributes;\n                    console.log('calendar')\n                    api.getUserFoods(user.id, currentDate)\n                    .then(json => {\n                        let breakfastFoods = json.data.filter(food => food.attributes.meal === 'breakfast')\n                        let lunchFoods = json.data.filter(food => food.attributes.meal === 'lunch')\n                        let dinnerFoods = json.data.filter(food => food.attributes.meal === 'dinner')\n                        let foodData = {\n                            fat: json.data.map((food)=>{\n                                let fatHash = {}\n                                fatHash['data'] = food.attributes.fat\n                                fatHash['time'] = food.attributes.time\n                                return fatHash\n                            }),\n                            protein: json.data.map((food)=>{\n                                let proteinHash = {}\n                                proteinHash['data'] = food.attributes.protein\n                                proteinHash['time'] = food.attributes.time\n                                return proteinHash\n                            }),\n                            carbs: json.data.map((food)=>{\n                                let carbHash = {}\n                                carbHash['data'] = food.attributes.carbs\n                                carbHash['time'] = food.attributes.time\n                                return carbHash\n                            }),\n                            calories: json.data.map((food)=>{\n                                let caloriesHash = {}\n                                caloriesHash['data'] = food.attributes.calories\n                                caloriesHash['time'] = food.attributes.time\n                                return caloriesHash\n                            }),\n                            potassium: json.data.map((food)=>{\n                                let potassiumHash = {}\n                                potassiumHash['data'] = food.attributes.potassium\n                                return potassiumHash\n                            }),\n                            sugar: json.data.map((food)=>{\n                                let sugarHash = {}\n                                sugarHash['data'] = food.attributes.sugar\n                                return sugarHash\n                            }),\n                            sodium: json.data.map((food)=>{\n                                let sodiumHash = {}\n                                sodiumHash['data'] = food.attributes.sodium\n                                return sodiumHash\n                            }),\n                            saturated_fat: json.data.map((food)=>{\n                                let saturated_fatHash = {}\n                                saturated_fatHash['data'] = food.attributes.saturated_fat\n                                return saturated_fatHash\n                            }),\n                            dietary_fiber: json.data.map((food)=>{\n                                let dietary_fiberHash = {}\n                                dietary_fiberHash['data'] = food.attributes.dietary_fiber\n                                return dietary_fiberHash\n                            }),\n                            cholesterol: json.data.map((food)=>{\n                                let cholesterolHash = {}\n                                cholesterolHash['data'] = food.attributes.cholesterol\n                                return cholesterolHash\n                            })\n                        }\n                        this.setState({\n                            breakfastFoods: breakfastFoods,\n                            lunchFoods: lunchFoods,\n                            dinnerFoods: dinnerFoods,\n                            foodData: foodData\n                        })\n                        console.log(foodData)\n                    })\n\n                    api.getUserExercises(user.id, currentDate)\n                    .then(json => {\n                        console.log(json.data)\n                        let exerciseData = json.data.map(food => food.attributes.calories)\n                        this.setState({\n                            todayExercises: json.data,\n                            exerciseData: exerciseData\n                        })\n                    })\n\n                    api.getUserNotes(user.id, currentDate)\n                    .then(json => {\n                        console.log(json.data)\n                        this.setState({\n                            todayNotes: json.data\n                        })\n                    })\n                })\n            }\n    }\n\n    render() {\n        let breakfastFoods\n        let lunchFoods\n        let dinnerFoods\n        let todayExercises\n        let todayNotes\n        let foodgraphs\n        let caloriesBurned\n       \n            if (!!this.state.todayExercises && !this.state.todayExercises[0]){\n                todayExercises = \"No Exercises Posted\"\n            } else if(!!this.state.todayExercises){\n                todayExercises = <ExerciseList props = {this.props} exercises = {this.state.todayExercises}/>\n            } \n\n            if (!!this.state.breakfastFoods && !this.state.breakfastFoods[0]){\n                breakfastFoods = \"No Breakfast Items Posted\"\n            } else if(!!this.state.breakfastFoods && !!this.state.breakfastFoods[0]){\n                console.log(this.state.breakfastFoods)\n                breakfastFoods = <FoodList props = {this.props} foods ={this.state.breakfastFoods}/>\n            } \n            \n            if (!!this.state.lunchFoods && !this.state.lunchFoods[0]){\n                lunchFoods = \"No Lunch Items Posted\"\n            } else if(!!this.state.lunchFoods && !!this.state.lunchFoods[0]){\n                console.log(this.state.lunchFoods)\n                lunchFoods = <FoodList props = {this.props} foods ={this.state.lunchFoods}/>\n            } \n\n            if (!!this.state.dinnerFoods && !this.state.dinnerFoods[0]){\n                dinnerFoods = \"No Dinner Items Posted\"\n            } else if(!!this.state.dinnerFoods && !!this.state.dinnerFoods[0]){\n                console.log(this.state.dinnerFoods)\n                dinnerFoods = <FoodList props = {this.props} foods ={this.state.dinnerFoods}/>\n            } \n\n            if (!!this.state.todayNotes && !this.state.todayNotes[0]){\n                todayNotes = \"No Notes Posted\"\n            } else if(!!this.state.todayNotes && !!this.state.todayNotes[0]){\n                todayNotes = <NoteList props = {this.props} notes = {this.state.todayNotes}/>\n            } \n\n            if(!this.state.foodData){\n                foodgraphs = \"Loading\"\n            } else if (!!this.state.foodData && !this.state.foodData.calories[0]){\n                foodgraphs = <h3>No Foods Posted</h3>\n            } else {\n                foodgraphs = <Graphs exerciseData = {this.state.exerciseData} foodData = {this.state.foodData}/>\n            }\n\n            if(!this.state.exerciseData){\n                caloriesBurned = \"Loading\"\n            } else if (!!this.state.exerciseData && !this.state.exerciseData[0]){\n                caloriesBurned = \"No Exercises Posted\"\n            } else {\n                let sum = this.state.exerciseData.reduce((total, sum) => total + sum)\n                caloriesBurned = `${sum} calories`\n            }\n\n            var today = new Date()\n            var currentDate = {\n                date: today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()\n            }\n            console.log(currentDate)\n        return (\n            \n        <div>\n        <h1>{currentDate.date}</h1>  \n        <div className=\"top-section\">\n            <div className =\"graph-section\">\n                <h2>Graphs</h2>\n                {foodgraphs}\n                <div>\n              <div className =\"exercise-data-div\">\n                <h1>Calories Burned Today:</h1>\n                <h3>{caloriesBurned}</h3>\n              </div>\n            </div>\n            </div>\n        </div>\n\n        <div className = \"track-container-meal\">\n            <div className = \"track-box\">\n                <div className=\"food-header\">\n                    <h3>Breakfast</h3>\n                    <div className=\"food-add\">\n                        <Link className=\"primary-bttn\" to={{pathname: '/postFood',\n                            state: {\n                                date: currentDate,\n                                meal: 'breakfast'\n                            }\n                        }}>+</Link> \n                    </div>\n                </div>\n                <div className=\"displayFood\">\n                    {breakfastFoods}\n                </div> \n            </div>\n    \n            <div className=\"track-box\">\n                <div className= \"food-header\">\n                    <h3>Lunch</h3>\n                    <div className=\"food-add\">\n                        <Link className =\"primary-bttn\" to={{pathname: '/postFood',\n                            state: {\n                                date: currentDate,\n                                meal: 'lunch'\n                            }\n                        }}>+</Link>\n                    </div>\n                </div>\n                <div className=\"displayFood\">\n                    {lunchFoods}\n                </div>\n            </div>\n\n            <div className=\"track-box\">\n                <div className= \"food-header\">\n                    <h3>Dinner</h3>\n                    <div className=\"food-add\">\n                        <Link className = \"primary-bttn\" to={{pathname: '/postFood',\n                            state: {\n                                date: currentDate,\n                                meal: 'dinner'\n                            }\n                        }}> + </Link>\n                    </div>\n                </div>\n                <div className=\"displayFood\">\n                    {dinnerFoods}\n                </div>\n            </div>\n        </div>\n\n        <div className= \"track-container-exercise\">\n                    <div className=\"track-box\">\n                        <h2>Exercise Entries</h2>\n                        <div className=\"displayExercise\">\n                            {todayExercises}\n                        </div>\n                        <br></br>\n                        <Link className=\"primary-bttn\" to={{pathname: '/postExercise',\n                            state: {\n                                date: currentDate\n                            }\n                        }}>Post Exercise</Link>\n                        \n            </div>\n        </div>\n\n        <div className = \"track-container\">\n            <div className=\"track-box\">\n                <h2>Notes</h2>\n                <div className=\"displayNote\">\n                    {todayNotes}\n                </div>\n                <br></br>\n                <Link className = \"primary-bttn\" to={{pathname: '/postNote',\n                    state: {\n                        date: currentDate\n                    }\n                }}>Post Note</Link>\n                <br></br>\n            </div>\n            \n        </div>\n        <br></br><br></br>\n    </div>\n        )\n    }\n}\n\nexport default DayPage\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class PostPage extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: null,\n            date: null,\n            meal: null,\n            postState: false,\n            menu: ''\n        }\n    }\n    \n    componentDidMount(){\n        console.log(this.state)\n    }\n\n    handleMenu = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    postNote = (event, subject, text, user, date) => {\n        event.preventDefault()\n        if(!date || !subject || !text){\n            alert(\"Please Fill In Required Fields!\")\n        } else {\n            api.postUserNote(subject, text, user, date)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    postState: true,\n                    date: date\n                })\n            })\n        }\n    }\n\n    postFood = (event, query, user, date, meal) => {\n        event.preventDefault()\n        if(!date || !query || !meal || (!date && !query && !meal)){\n           \n            console.log(date, query, meal)\n            alert(\"Please Fill In Required Fields!\")\n        } else {\n           \n            console.log(date, user, query, meal)\n        api.nutritionixGetFood(query)\n            .then(json => {\n                json.foods.forEach(food => {\n                    var today = new Date();\n                    var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                    console.log(time)\n                    api.postUserFood(food, user, meal, date, time)\n                    .then(json => {\n                        console.log(json)\n                        this.setState({\n                            postState: true,\n                            date: date\n                        })\n                    })\n                })\n                console.log(json)\n            })\n        } \n    }\n\n    postExercise = (event, query, user, date) => {\n        event.preventDefault()\n        if(!query || !date){\n            alert(\"Please Fill In Required Fields!\")\n        } else{ \n        api.nutritionixGetExercise(query, user)\n            .then(json => {\n                json.exercises.forEach(exercise => {\n                    let today = new Date();\n                    var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                    api.postUserExercise(exercise, user, date, time)\n                    .then(json => {\n                        console.log(json)\n                        this.setState({\n                            postState: true,\n                            date: date\n                        })\n                    })\n                })\n                console.log(json)\n            })\n        }\n    }\n\n    render() {\n        let menu\n        let link\n        if (this.state.menu === \"food\"){\n        menu = \n            <form className=\"userForm\" onSubmit={(event) => this.postFood(event, this.state.fields.foodInput, this.props.currentUser, this.state.fields.date, this.state.meal)}>\n                <p>Submit a food post in plain English!</p>\n                <label> Date:\n                    <input onChange={this.handleChange} type=\"date\" name=\"date\" /> \n                </label> <br/>\n                <label> Post Food:\n                    <input type=\"text\" name=\"foodInput\" onChange={this.handleChange}/>\n                </label>\n                <br></br>\n                <label> Select Meal:\n                <select onChange ={this.handleMenu} name=\"meal\" id=\"meal-select\">\n                    <option value=\"\">Select Category</option>\n                    <option value=\"breakfast\">Breakfast</option>\n                    <option value=\"lunch\">Lunch</option>\n                    <option value=\"dinner\">Dinner</option>\n                </select>\n                </label>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        } else if (this.state.menu === \"exercise\") {\n        menu = \n            <form className=\"userForm\" onSubmit={(event) => this.postExercise(event, this.state.fields.exerciseInput, this.props.currentUser, this.state.fields.date)}>\n                <p>Submit an exercise post in plain English!</p>\n                <label> Date:\n                    <input onChange={this.handleChange} type=\"date\" name=\"date\" /> \n                </label> <br/>\n                <label> Post Exercise:\n                    <input type=\"text\" name=\"exerciseInput\" onChange={this.handleChange}/>\n                </label>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        }\n        else if (this.state.menu === \"note\") {\n            menu = \n                <form className=\"userForm\" onSubmit={(event) => this.postNote(event, this.state.fields.subject, this.state.fields.text, this.props.currentUser, this.state.fields.date)}>\n                    <label> Date:\n                        <input onChange={this.handleChange} type=\"date\" name=\"date\" /> \n                    </label> <br/>\n                    <label> Heading:\n                        <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\n                    </label>\n                    <br></br>\n                    <label> Text:\n                        <input type=\"text\" name=\"text\" onChange={this.handleChange}/>\n                    </label>\n                    <br></br>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n        }\n\n        if(!this.state.postState){\n            link = null\n        } else {\n            link =  <Link to={`/daypage/${this.state.date}`}>Go to {this.state.date}</Link> \n        }\n\n\n        return (\n            <div>\n                <h1>Post Log</h1>\n                {this.state.postState ? <h2>Posted!</h2> : null}\n                <select onChange ={this.handleMenu} name=\"menu\">\n                    <option value=\"\">Select Category</option>\n                    <option value=\"food\">Food</option>\n                    <option value=\"exercise\">Exercise</option>\n                    <option value=\"note\">Note</option>\n                </select>\n                <br></br>\n                <br></br>\n                \n                {menu}\n                <br></br>\n                {link}\n            </div>\n        )\n    }\n}\n\nexport default PostPage\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\n\nexport class PostExercise extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            exerciseInput: '',\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n\n    postExercise = (event, query, user) => {\n        event.preventDefault()\n        api.nutritionixGetExercise(query, user)\n        .then(json => {\n            json.exercises.forEach(exercise => {\n                let today = new Date();\n                var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                api.postUserExercise(exercise, user, this.state.date, time)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        posted: true\n                    })\n                })\n            })\n            console.log(json)\n        })\n    }\n\n    render(){\n       \n        return (\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post an Exercise!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event)=> this.postExercise(event, this.state.exerciseInput, this.props.currentUser)} >\n                        <p>Submit an exercise post in plain English!</p>\n                        <label> Exercise\n                        <input type=\"text\" name=\"exerciseInput\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostExercise\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\n\nexport class PostNotePage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            fields: {},\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    postNote = (event,subject, text, user) => {\n        event.preventDefault()\n            api.postUserNote(subject, text, user, this.state.date)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    posted: true\n                })\n            })\n    }\n    render() {\n        \n        return (\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post an Note!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event) => this.postNote(event, this.state.fields.subject, this.state.fields.text, this.props.currentUser)}>\n                        <label> Heading:\n                        <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <label> Text:\n                        <input type=\"text\" name=\"text\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostNotePage\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\nexport class PostPage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            meal: props.location.state.meal,\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    postFood = (event, query, user) => {\n        event.preventDefault()\n        api.nutritionixGetFood(query, user)\n        .then(json => {\n            json.foods.forEach(food => {\n                var today = new Date();\n                var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                console.log(time)\n                api.postUserFood(food, user, this.state.meal, this.state.date, time)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        posted: true\n                    })\n                })\n            })\n            console.log(json)\n        })\n    } \n\n    render() {\n        let meal\n            if (this.state.meal === 'breakfast'){\n                meal = \"Breakfast\"\n            } else if (this.state.meal === 'lunch'){\n                meal = \"Lunch\"\n            } else if (this.state.meal === 'dinner'){\n                meal = \"Dinner\"\n            }\n        \n        return (\n\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post a {meal} Item!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event) => this.postFood(event, this.state.foodInput, this.props.currentUser, this.state.meal)}>\n                        <p>Submit a food post in plain English!</p>\n                        <label> Post Food\n                        <input type=\"text\" name=\"foodInput\" onChange={this.handleChange}/>\n                        </label>\n                         <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>                \n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default PostPage\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class ExerciseEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        \n        api.editUserExercise(this.state.fields, id)\n        .then(json => {\n            this.setState({\n                editState: true\n            })\n            console.log(json)\n        })\n        console.log(id)\n    }\n    render() {\n        return (\n            <div>\n                <h1>Edit Exercise</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"exerciseEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Name: \n                    <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Calories Burned: \n                    <input type=\"text\" name=\"calories\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label>Unit: \n                    <input type=\"text\" name=\"unit\" onChange={this.handleChange}/> <br/>\n                    </label>\n                    <label> Unit Number: \n                    <input type=\"text\" name=\"unit_number\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link>\n            </div>\n        )\n    }\n}\n\nexport default ExerciseEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class NoteEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        api.editUserNote(this.state.fields, id)\n        .then(json => {\n            console.log(json)\n            console.log(this.props)\n            this.setState({\n                editState: true\n            })\n        })\n        console.log(id)\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <h1>Edit Note</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"noteEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Username\n                    <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Password\n                    <input type=\"text\" name=\"text\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link> \n\n            </div>\n            \n        )\n    }\n}\n\nexport default NoteEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class FoodEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state) \n    }\n\n    handleSubmit = (event, id) => {\n        console.log(id)\n        event.preventDefault()\n        api.editUserFood(this.state.fields, id)\n        .then(json => {\n            this.setState({\n                editState: true\n            })\n            console.log(json)\n        })\n        console.log(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Edit Food</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"foodEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Name:\n                    <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Calories Consumed:\n                    <input type=\"text\" name=\"calories\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Fat:\n                    <input type=\"text\" name=\"fat\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Protein:\n                    <input type=\"text\" name=\"protein\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Carbs:\n                    <input type=\"text\" name=\"carbs\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Potassium:\n                    <input type=\"text\" name=\"potassium\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Sugar:\n                    <input type=\"text\" name=\"sugar\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Sodium:\n                    <input type=\"text\" name=\"sodium\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Saturated Fat:\n                    <input type=\"text\" name=\"saturated_fat\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Cholesterol:\n                    <input type=\"text\" name=\"cholesterol\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Dietary Fiber:\n                    <input type=\"text\" name=\"dietary_fiber\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link>\n            </div>\n        )\n    }\n}\n\nexport default FoodEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class EditUser extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        api.editUser(this.state.fields, id)\n        .then(json => {\n            console.log(json)\n            console.log(this.props)\n            this.setState({\n                editState: true\n            })\n        })\n        console.log(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Edit User Info</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"foodEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Username:\n                    <input type=\"text\" name=\"username\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Weight:\n                    <input type=\"text\" name=\"weight\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Height:\n                    <input type=\"text\" name=\"height\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Calorie Goal:\n                    <input type=\"text\" name=\"calorie_goal\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Diet:\n                    <input type=\"text\" name=\"diet_type\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Image:\n                    <input type=\"text\" name=\"image\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Bio:\n                    <input type=\"text\" name=\"bio\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/profile`}>Go back to Profile Page</Link>\n            </div>\n        )\n    }\n}\n\nexport default EditUser\n","import React, {Component} from 'react';\nimport './App.css';\nimport api from './services/Api.js'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport ProfilePage from './containers/ProfilePage';\nimport About from './components/About'\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport CalendarPage from './containers/CalendarPage'\nimport DayPage from './containers/DayPage'\nimport TodayPage from './containers/TodayPage'\nimport PostPage from './containers/PostPage'\nimport PostExercise from './containers/PostExercise'\nimport PostNote from './containers/PostNote'\nimport PostFood from './containers/PostFood'\nimport EditExercise from './components/EditExercise'\nimport EditNote from './components/EditNote'\nimport EditFood from './components/EditFood'\nimport EditUser from './components/EditUser'\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super()\n  this.state = {\n    currentUser: {}\n  }\n}\n\ncomponentDidMount() {\n  const token = localStorage.getItem('token');\n  if(token) {\n    api.getCurrentUser().then(json => {\n      this.setState({ currentUser: json.user.data.attributes });\n      console.log(json)\n    });\n  }\n}\n\nhandleLogin = json => {\n  const currentUser = json;\n  console.log(currentUser)\n  localStorage.setItem('token', currentUser.jwt );\n  this.setState({ currentUser: {username: currentUser.user.data.attributes.username, id: currentUser.user.data.id }});\n}\n\nhandleLogout = () => {\n  localStorage.removeItem('token');\n  this.setState({ currentUser: {} })\n  \n};\n// notes for test\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">  \n          <Router>\n            <div className='app'>\n            <NavBar handleLogout={this.handleLogout} currentUser = {this.state.currentUser}/>\n            <Route exact path =\"/Nutrition_Tracker_2.0_frontend/\" render={(props) => <About {...props} currentuser ={this.state.currentUser}/>} />\n            <Route exact path =\"/Nutrition_Tracker_2.0_frontend/about\" render={(props) => <About {...props} currentuser ={this.state.currentUser}/>} />\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/login\" render={(props) => <Login {...props} handleLogin={this.handleLogin}/>} />\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/signup\" render={(props) => <SignUp {...props} handleLogin={this.handleLogin}/>} />\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/profile\" render ={(props) => <ProfilePage {...props} handleLogout={this.handleLogout} currentUser={this.state.currentUser}/>} />\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/daypage/:date\" render = {(props) => <DayPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/todaypage\" render = {(props) => <TodayPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/calendar\" render = {(props) => <CalendarPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/post\" render = {(props) => <PostPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/postfood\" render = {(props) => <PostFood {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/postexercise\" render = {(props) => <PostExercise {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/postnote\" render = {(props) => <PostNote {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/editfood\" render = {(props) => <EditFood {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/editexercise\" render = {(props) => <EditExercise {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/editnote\" render = {(props) => <EditNote {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/Nutrition_Tracker_2.0_frontend/edituser\" render = {(props) => <EditUser {...props} currentUser = {this.state.currentUser}/>}/>\n            </div>\n          </Router>\n      </header>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}