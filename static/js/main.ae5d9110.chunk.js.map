{"version":3,"sources":["services/Api.js","components/NavBar.js","components/WeightGraph.js","containers/ProfilePage.js","components/About.js","components/Login.js","components/SignUp.js","containers/CalendarPage.js","components/NoteForm.js","components/FoodCard.js","components/FoodList.js","components/ExerciseCard.js","components/ExerciseList.js","components/NoteCard.js","components/NoteList.js","components/Graphs.js","containers/DayPage.js","components/RecordButton.js","containers/PostPage.js","containers/PostExercise.js","containers/PostNote.js","containers/PostFood.js","components/EditExercise.js","components/EditNote.js","components/EditFood.js","components/EditUser.js","App.js","serviceWorker.js","index.js"],"names":["API_ROOT","headers","Accepts","localStorage","getItem","query","fetch","method","body","JSON","stringify","then","response","json","user","gender","weight","height","age","food","meal","date","time","food_post","name","food_name","calories","nf_calories","fat","nf_total_fat","protein","nf_protein","carbs","nf_total_carbohydrate","potassium","nf_potassium","sugar","nf_sugars","sodium","nf_sodium","saturated_fat","nf_saturated_fat","cholesterol","nf_cholesterol","dietary_fiber","nf_dietary_fiber","user_id","id","note","image","photo","highres","res","exercise","exercise_post","subject","text","console","log","current_weight","username","password","password_confirmation","passwordConfirmation","first_name","last_name","diet_type","email","calorie_goal","bio","userId","fields","newDate","Date","unit","unit_number","NavBar","props","loggedIn","currentUser","className","style","backgroundColor","width","src","to","currentDate","onClick","handleLogout","WeightGraph","state","posted","timeline","this","graph","dataArray","curr","month","getMonth","weekDays","getFullYear","i","first","getDate","getDay","setDate","toISOString","slice","push","graphTitle","weights","forEach","element","data","weekArray","find","length","unshift","filter","split","year","parseInt","sortedArray","sort","a","b","parseFloat","join","chartType","loader","options","title","hAxis","titleTextStyle","color","vAxis","minValue","chartArea","rootProps","Component","ProfilePage","capitalize","word","charAt","toUpperCase","deleteUser","window","confirm","api","alert","history","editUser","pathname","handleChange","e","newField","target","value","setState","handleSubmit","preventDefault","current_user","handleYear","children","graph_type","attributes","userWeights","userData","yearSelect","onSubmit","type","onChange","placeholder","Home","marginBottom","Login","newFields","message","error","handleLogin","SignUp","signUpInfo","CalendarPage","dateLink","weekFoodData","weekExerciseData","currentUserId","newData","getWeek","foodData","array","filteredFoods","map","filteredExercises","sum","reduce","total","Note","event","class","FoodCard","deleteFood","deleted","editFood","prop","noteStatus","noteButton","NoteForm","marginRight","FoodList","foods","key","ExerciseCard","deleteExercise","editExercise","display","ExerciseList","exercises","NoteCard","deleteNote","editNote","NoteList","notes","Graphs","exerciseData","fatSum","carbSum","proteinSum","potassiumSum","sugarSum","sodiumSum","saturatedFatSum","dietaryFiberSum","cholesterolSum","allCalorieData","sortedCalorieData","newTime","maxValue","DayPage","dayExercises","breakfastFoods","lunchFoods","dinnerFoods","dayNotes","dateParams","match","params","caloriesHash","fatHash","proteinHash","carbHash","potassiumHash","sugarHash","sodiumHash","saturated_fatHash","dietary_fiberHash","cholesterolHash","foodgraphs","caloriesBurned","dateSplit","day","justifyContent","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","recognition","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","RecordButton","useState","buttonClass","setButtonClass","onresult","results","transcript","confidence","setResults","onspeechend","stop","start","PostPage","currentMenu","link","setFields","setMeal","setPosted","menu","setMenu","recordSelect","setRecordSelect","setConfidence","setType","setRecordResults","splitDate","today","getHours","getMinutes","getSeconds","postFood","marginTop","fontStyle","postExercise","postNote","PostExercise","exerciseInput","location","PostNotePage","foodInput","ExerciseEdit","editState","NoteEdit","FoodEdit","EditUser","App","setItem","jwt","removeItem","current_date","basename","exact","path","render","About","currentuser","PostFood","PostNote","EditFood","EditExercise","EditNote","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae5d9110.chunk.js","sourcesContent":["const API_ROOT = `https://nutrition-tracker-7.herokuapp.com/api/v1/`;\n\nlet token = localStorage.getItem(\"token\")\n\nconst headers = {\n  'Content-Type': 'application/json',\n  Accepts: 'application/json',\n  \"Authorization\": token\n};\n\nconst nutritionixGetFood = (query) => {\n    return fetch(`https://trackapi.nutritionix.com/v2/natural/nutrients`, {\n        method: `POST`,\n        headers: {\n          'content-type': 'application/json',\n          'x-app-id': '5abf948d',\n          'x-app-key': '47c1f26a3b33cec73d5a0862b176fa69'\n        },\n        body: JSON.stringify({\n            \"query\": query\n        })\n    })\n    .then(response => response.json())\n}\n\nconst nutritionixGetExercise = (query, user) => {\n    return fetch(`https://trackapi.nutritionix.com/v2/natural/exercise`, {\n        method: `POST`,\n        headers: {\n          'content-type': 'application/json',\n          'x-app-id': '5abf948d',\n          'x-app-key': '47c1f26a3b33cec73d5a0862b176fa69'\n        },\n        body: JSON.stringify({\n            \"query\": query,\n            \"gender\": user.gender,\n            \"weight_kg\": (user.weight / 2.2046),\n            \"height_cm\": (user.height * 2.54),\n            \"age\": user.age\n        })\n    }).then(response => response.json())\n}\n\nconst postUserFood = (food, user, meal, date, time) => {\n    return fetch(`${API_ROOT}food_posts`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            food_post: {\n                name: food.food_name,\n                calories: food.nf_calories,\n                fat: food.nf_total_fat,\n                protein: food.nf_protein,\n                carbs: food.nf_total_carbohydrate,\n                potassium: food.nf_potassium,\n                sugar: food.nf_sugars,\n                sodium: food.nf_sodium,\n                saturated_fat: food.nf_saturated_fat,\n                cholesterol: food.nf_cholesterol,\n                dietary_fiber: food.nf_dietary_fiber,\n                user_id: user.id,\n                meal: meal,\n                note: '',\n                date: date,\n                time: time,\n                image: food.photo.highres\n            }\n        })\n    }).then(res => res.json())\n}\n\nconst postUserExercise = (exercise, user, date, time) => {\n    return fetch(`${API_ROOT}exercise_posts`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            exercise_post: {\n                name: exercise.name,\n                calories: exercise.nf_calories,\n                user_id: user.id,\n                note: '',\n                date: date,\n                time: time,\n                image: exercise.photo.highres,\n\n            }\n        })\n    }).then(res => res.json())\n}\n\nconst postUserNote = (subject, text, user, date) => {\n   \n    return fetch(`${API_ROOT}notes`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            subject: subject,\n            text: text,\n            date: date,\n            user_id: user.id\n        })\n    }).then(res => res.json())\n}\n\nconst postUserWeight = (user, weight, date) =>{\n    console.log(user, weight, date)\n    return fetch(`${API_ROOT}weights`, {\n        method: `POST`,\n        headers: headers,\n        body: JSON.stringify({\n            user_id: user.id,\n            date: date,\n            current_weight: weight\n        })\n    }).then(res => res.json())\n}\n\nconst editUser = (fields, id) => {\n    return fetch(`${API_ROOT}users/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            username: fields.username,\n            weight: fields.weight,\n            height: fields.height,\n            calorie_goal: fields.calorie_goal,\n            diet_type: fields.diet_type,\n            image: fields.image,\n            bio: fields.bio,\n          \n        })\n    }).then(res => res.json())\n}\n\nconst editUserExercise = (fields, id) => {\n    let newDate = new Date()\n    console.log(newDate)\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            name: fields.name,\n            calories: fields.calories,\n            unit: fields.unit,\n            unit_number: fields.unit_number\n        })\n    }).then(res => res.json())\n}\n\nconst editUserFood = (fields, id) => {\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            name: fields.name,\n            calories: fields.calories,\n            fat: fields.fat,\n            protein: fields.protein,\n            carbs: fields.carbs,\n            potassium: fields.potassium,\n            sugar: fields.sugar,\n            sodium: fields.sodium,\n            saturated_fat: fields.saturated_fat,\n            cholesterol: fields.cholesterol,\n            dietary_fiber: fields.dietary_fiber\n        })\n    }).then(res => res.json())\n}\n\nconst editUserNote = (fields, id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}notes/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            subject: fields.subject,\n            text: fields.text\n        })\n    }).then(res => res.json())\n}\n\nconst editFoodNote = (fields, id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            note: fields.note\n        })\n    }).then(res => res.json())\n}\n\nconst editExerciseNote = (fields, id) => {\n    console.log(id)\n    console.log(fields)\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n        method: `PATCH`,\n        headers: headers,\n        body: JSON.stringify({\n            note: fields.note\n        })\n    }).then(res => res.json())\n}\n\nconst deleteUser= (id) => {\n    return fetch(`${API_ROOT}users/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserExercise = (id) => {\n    return fetch(`${API_ROOT}exercise_posts/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserFood= (id) => {\n    return fetch(`${API_ROOT}food_posts/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst deleteUserNote = (id) => {\n    return fetch(`${API_ROOT}notes/${id}`, {\n      method: `DELETE`,\n      headers: headers\n    }).then(res => res.json());\n}\n\nconst getUserFoods = (userId, date) => {\n    // console.log(userId, date)\n    return fetch(`${API_ROOT}food_posts?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserExercises = (userId, date) => {\n    // console.log(userId, date)\n    return fetch(`${API_ROOT}exercise_posts?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserNotes = (userId, date) => {\n    console.log(userId, date)\n    return fetch(`${API_ROOT}notes?user_id=${userId}&date=${date}`, {headers: headers})\n    .then(response => response.json())\n}\n\nconst getUserWeights = (id) => {\n    console.log(id)\n    return fetch(`${API_ROOT}weights?user_id=${id}`,\n    {\n       headers: headers \n    }).then(response => response.json())\n}\n\nconst getUser = (id) => {\n    return fetch(`${API_ROOT}users/${id}`, {headers: headers})\n    .then(res => res.json())\n}\n\nconst getCurrentUser = () => {\n    return fetch(`${API_ROOT}current_user`, {\n      headers: headers\n    }).then(res => res.json());\n  };\n\nconst signUp = (user) => {\n    return fetch(`${API_ROOT}users`, {\n      method: `POST`,\n      headers: headers,\n      body: JSON.stringify({ \n          user: {\n              username: user.username, \n              password: user.password, \n              password_confirmation: user.passwordConfirmation, \n              first_name: user.first_name,\n              last_name: user.last_name,\n              image: user.image,\n              age: user.age,\n              diet_type: user.diet_type,\n              weight: user.weight,\n              height: user.height,\n              email: user.email,\n              calorie_goal: user.calorie_goal,\n              bio: user.bio,\n              gender: user.gender\n            } \n        })\n    }).then(res => res.json());\n  };\n  \nconst login = (username, password) => {\n    return fetch(`${API_ROOT}login`, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({ user: {username, password} })\n    }).then(res => res.json());\n};\n\n\nexport default {\n    nutritionixGetFood,\n    nutritionixGetExercise,\n    postUserFood,\n    postUserExercise,\n    postUserNote,\n    postUserWeight,\n    signUp,\n    login,\n    getCurrentUser,\n    getUser,\n    getUserFoods,\n    getUserExercises,\n    getUserNotes,\n    getUserWeights,\n    editUser,\n    editUserExercise,\n    editUserFood,\n    editUserNote,\n    editFoodNote,\n    editExerciseNote,\n    deleteUser,\n    deleteUserExercise,\n    deleteUserFood,\n    deleteUserNote\n} ","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nfunction NavBar(props) {\n    let loggedIn = !!props.currentUser.id\n\n    return (\n        \n        <div className=\"navBar\">\n            \n            <ul style = {{backgroundColor: 'transparent'}}>\n               \n            {loggedIn ? (  \n                <div>\n                    <li className= \"nav\">\n                        <img style = {{height: '15%', width: '15%'}} src = {'./chart_logo.png'}></img>\n                        Nutrition Tracker\n                    </li>\n                \n                    <li className=\"nav\"><NavLink to={`/daypage/${props.currentDate}`}>Today</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/calendar\">Calendar</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/profile\">Profile</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/about\">About</NavLink></li> \n                    <li className=\"nav\"><NavLink to=\"/post\">Speech-2-Text</NavLink></li> \n                    <li className=\"navLog\"><NavLink to=\"/about\" onClick={props.handleLogout}>Logout</NavLink> </li> \n                </div>\n                \n            ) : (\n                <div>\n                    <li className= \"nav\">Nutrition Tracker</li>\n                    <li className=\"nav\"><NavLink to=\"/signup\">Signup</NavLink></li>\n                    <li className=\"nav\"><NavLink to=\"/about\">About</NavLink></li> \n                    <li className=\"navLog\"><NavLink to=\"/login\">Login</NavLink></li> \n                </div>\n             )}\n            </ul>\n        </div>\n    )\n}\n\nexport default NavBar","import React, { Component } from 'react'\nimport { Chart } from \"react-google-charts\";\n// import api from '../services/Api.js'\n\nexport class WeightGraph extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            posted: false,\n            timeline: props\n        }\n    }\n\n    render(){\n        console.log(this.props, this.props.timeline)\n        let dataArray = []\n        let curr = new Date();\n        let month = curr.getMonth() + 1\n        let year = curr.getFullYear()\n        let weekDays = []\n        \n        for(let i = 0; i < 7; i++){\n            let first = curr.getDate() - curr.getDay() + i \n            console.log(first)\n            let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n            weekDays.push(date)\n            \n        }\n        console.log(weekDays)\n        // dataArray.push([\"3/23\", 0])\n        let graph \n        let graphTitle = \"Weight Recordings\"\n        if(!!this.props.user && !!this.props.weights){\n            console.log(this.props)\n            // graph = \"Loading\"\n            this.props.weights.forEach(element => {\n                let data = []\n                data.push(element.date)\n                data.push(element.current_weight)\n                dataArray.push(data)\n            })\n          \n            \n            if(!this.props.timeline || (!!this.props.timeline && this.props.timeline === \"week\")){\n                let weekArray = []\n                for(let i = 0; i < dataArray.length; i++){\n                    if ((!!weekDays.find(element => element === dataArray[i][0]) === true)){\n                        weekArray.push(dataArray[i])\n                    }   \n                }\n                dataArray = weekArray\n\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                console.log(dataArray)\n\n                graphTitle = 'This Week\\'s Weight Records'\n            } else if(!!this.props.timeline && this.props.timeline === \"month\") {\n                dataArray = dataArray.filter(element => {\n                    return element[0].split(\"-\")[1] == month;\n                })\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                graphTitle = 'This Month\\'s Weight Records'\n            } else if(!!this.props.year){\n                console.log(parseInt(this.props.year, 10))\n                dataArray = dataArray.filter(element => {\n                    return element[0].split(\"-\")[0] == parseInt(this.props.year, 10);\n                })\n                dataArray.unshift([\"Date\" , \"Current Weight\"])\n                graphTitle = 'This Year\\'s Weight Records'\n                \n            } \n\n        } \n        if(!dataArray[1]){\n            graph = \"No Data!\"\n        } else {\n            let sortedArray = dataArray.sort((a, b) => {\n                console.log(parseFloat(a[0].split(\"-\").join(\"\")), b[1])\n                return parseFloat(a[0].split(\"-\").join(\"\")) - parseFloat(b[0].split(\"-\").join(\"\"))\n                        // return a[1] - b[1]\n            })\n            \n            graph = \n                <Chart\n                    width={'1285px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data = {sortedArray}\n                    // *Example Data*\n                    // [\"Nutrient\", \"Overall Calorie Intake\"],\n                    // [\"3/23\", 0],\n                    // [\"3/24\", 1072.75],\n                    // [\"3/25\", 0],\n                    // [\"3/26\", 0],\n                    // [\"3/27\", 0],\n                    // [\"3/28\", 0],\n                    // [\"3/29\", 0]\n                    options={{\n                    title: graphTitle,\n                    hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                    vAxis: { title: 'Calories', minValue: 0 },\n                    // For the legend to fit, we make the chart area smaller\n                    chartArea: { width: '50%', height: '70%' },\n                    // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            }\n        //console.log(testArray)\n    \n        return(\n            \n            <div>\n                \n                <br></br>\n                <div className = \"bar-graph-div\">\n                <option></option>\n                {graph}\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default WeightGraph\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport WeightGraph from '../components/WeightGraph'\n\nexport default class ProfilePage extends Component {\n    constructor(){\n        super()\n        this.state = {\n            current_user: null,\n            fields: [],\n            graph_type: null,\n            weights: null\n        }\n    }\n\n    componentDidMount(){\n        const token = localStorage.getItem('token');\n        if (token) {\n            api.getCurrentUser().then(json => {\n            let user = json.user.data.attributes;\n            this.setState({\n                current_user: user\n            })\n            console.log(this.state.current_user)\n                api.getUserWeights(user.id).then(json => {\n                    let userWeights = []\n                    console.log(json.data)\n                    json.data.forEach(element => userWeights.push(element.attributes))\n                    this.setState({\n                        weights: userWeights\n                    })\n                    console.log(this.state.weights)\n                })\n            })\n            \n        }\n    }\n\n    capitalize = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n\n    deleteUser = () => {\n        let answer = window.confirm(\"Are you sure? This will delete all of your posts.\")\n        if (answer) {\n            api.deleteUser(this.props.currentUser.id)\n            .then(json => { console.log(json) })\n            alert(\"Deleted!\")\n            this.props.handleLogout()\n            this.props.history.push('/about')\n        } \n    }\n\n   \n    editUser = () => {\n        this.props.history.push({\n            pathname: \"/edituser\",\n            state: {\n                id: this.props.currentUser.id\n            },\n            \n        })\n    }\n\n    handleChange = (e) => {\n        let newField = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newField\n        })\n        console.log(this.state.fields)\n    }\n\n    handleSubmit = (e) => {\n        console.log(this.props.currentUser.id, parseInt(this.state.fields.weight,10), this.state.fields.date)\n        e.preventDefault()\n        api.postUserWeight(this.state.current_user, parseInt(this.state.fields.weight, 10), this.state.fields.date)\n        .then(json => console.log(json))\n    }\n\n    handleYear = (e)=> {\n        e.preventDefault();\n      \n        this.setState({\n            year: e.target.children[0].value\n        })\n\n    }\n\n    render() {\n        let userData \n        let user\n        let current_user\n        let yearSelect\n            if(!!this.state.current_user){\n                // console.log(this.state.current_user)\n                let image \n                current_user = this.state.current_user\n                if(!!this.state.current_user.image){\n                    image = this.state.current_user.image\n                } else {\n                    image = \"https://clipartart.com/images/default-profile-picture-clipart-3.jpg\"\n                }\n                user = this.capitalize(this.state.current_user.first_name)\n                userData = \n                <div>\n                    <p>User Info</p>\n                    <div>\n                        <img width = \"350px\" src ={image}></img>\n                    </div>\n                    <p>Age: {this.state.current_user.age}</p>\n                    <p>Weight: {this.state.current_user.weight} pounds</p>\n                    <p>Height: {this.state.current_user.height} inches</p>\n                    <p>Calorie Goal: {this.state.current_user.calorie_goal}</p>\n                    <p>Diet: {this.state.current_user.diet_type}</p>\n                    <p>Bio: {this.state.current_user.bio}</p>\n                </div>\n                if(this.state.fields.timeline === \"year\"){\n                    yearSelect = \n                    <div>\n                        <h2>Enter a Year</h2>\n                        <div>\n                            <form onSubmit = {this.handleYear}>\n                                <input type= \"integer\"></input>\n                                <input type = \"submit\"></input>\n                            </form>\n                        </div>      \n                    </div>\n                } else {\n                    yearSelect = <div></div>\n                }\n            } else {\n                userData = 'Loading...'\n            }\n\n            \n\n        return (\n            <div>\n                <br></br>\n                <h1>Welcome {user}</h1>\n                <br></br>\n                    <div className = \"exercise-plan-container\">\n                        <div>\n                        <h3>{userData}</h3>\n                        </div>\n                        <button className=\"secondary-bttn\" onClick = {this.editUser}>Edit Profile</button>\n                        <button className=\"secondary-bttn\" onClick = {this.deleteUser}>Delete Account</button>\n                    </div>\n                    <div className = \"exercise-plan-container\">\n                    <h1>Weight tracker</h1>\n                    <h2>Enter your weight</h2>\n                    <form onSubmit = {(e) => this.handleSubmit(e)}>\n                        <label>\n                            Date:\n                        </label>\n                        <input name = \"date\" type = \"date\" onChange = {this.handleChange}>\n                        </input>\n                        <br></br>\n                        <label>\n                            Weight:\n                        </label>\n                        <input name = \"weight\" type = \"number\" placeholder = \"Enter weight!\" onChange = {this.handleChange}>\n                        </input>\n                        <br></br>\n                        <input type =\"submit\"></input>\n                    </form>\n                    <br></br>\n                    </div>\n                    <div className = \"exercise-plan-container\">\n                        <h2>Select a timeline</h2>\n                        <select name = \"timeline\" onChange = {(e) => this.handleChange(e)}>\n                            <option value = \"\">Select a Timeline</option>\n                            <option value = \"week\">Week</option>\n                            <option value = \"month\">Month</option>\n                            <option value = \"year\">Year</option>\n                        </select>\n                        {yearSelect}\n\n                        <WeightGraph weights = {this.state.weights} user = {current_user} timeline = {this.state.fields.timeline} year = {this.state.year}/>\n                    </div>\n\n                <br></br>\n                \n            </div>\n                \n        )\n    }\n}\n\n","import React, { Component } from 'react'\n// import api from '../services/Api'\n\nexport class Home extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>About Us</h1>\n                <div className = \"exercise-plan-container\">\n                    <div className = \"exercise-plan-display\">\n                    <h2 style = {{marginBottom: '4%'}}>Welcome to Nutrition Tracker</h2>\n                    <p> \n                        Nutrition Tracker is a nutrition tracking app, which specializes in displaying \n                        vital nutritional information. It's difficult to see the full picture when tracking \n                        nutrition info over time, but with Nutrition Tracker, you have all of your data organized by days,\n                        weeks, and into graphs that include calorie intake, macronutrients, and everything that would\n                        show up on a typical nutrition facts label. \n\n                    </p>\n                    <p>\n                        Nutrition Tracker also utilizes the Nutritionix database, which has access\n                        to nutrition information of almost a million different food items. It also\n                        has access to a vast array of exercise information, so you can track how many\n                        calories you burned on a jog or a workout at the gym. Nutrition Tracker\n                        makes use of natural language analysis, so you can type into the input box your exercises and\n                        foods into plain English, and it will convert your input into relevant data. An example sentence \n                        would be something like: \"I ate 2 bananas, and a chicken salad sandwich\".\n                    </p>\n                    <p>\n                        Studies show that there are benefits to keeping track of how many calories\n                        you're consuming and what food you eat. With the help of the NutritionTracker app,\n                        you can easily record and observe important info, to help you make accurate decisions.\n                    </p>\n\n                    </div>\n                    \n                </div>\n                <br></br>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class Login extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            error: false,\n            fields: {\n                username:'',\n                password:''\n            }\n        }\n    }\n\n    handleChange = e => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        api.login(this.state.fields.username, this.state.fields.password)\n        .then(json => {\n            console.log(json)\n          if ( json.message === \"Invalid username or password\" ) {\n            this.setState({ error: true })\n            console.log(this.state.error)\n          } else {\n            console.log(json)\n            this.props.handleLogin(json);\n            this.props.history.push(`/daypage/${this.props.currentDate}`);\n          };\n        });\n      };\n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <div className=\"login\">\n                        <h1> Login:</h1>\n                        {this.state.error ? <h2>Try Again</h2> : null}\n                        <form className=\"loginForm\" onSubmit={this.handleSubmit}>\n                        <label> Username\n                        <input type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <label> Password\n                        <input type=\"password\" name=\"password\" onChange={this.handleChange}/> \n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class SignUp extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {}\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        let signUpInfo = this.state.fields\n        api.signUp(signUpInfo)\n        .then(json => {\n          if ( json.error ) {\n            this.setState({ error: true })\n          } else {\n            this.props.handleLogin(json);\n            this.props.history.push(`/daypage/${this.props.currentDate}`);\n          };\n        });\n      };\n\n \n\n    render() {\n        return (\n            <div className=\"signup\">\n                <h1> Sign Up</h1>\n                {this.state.error ? <h3>Invalid Inputs, try again</h3> : null}\n                <form className=\"signUpForm\" onSubmit={this.handleSubmit}>\n                    <label> Username\n                    <input type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Password\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label>Confirm Password\n                    <input type=\"password\" name=\"passwordConfirmation\" onChange={this.handleChange}/> <br/>\n                    </label><br/>\n                    <label> First Name\n                    <input type=\"text\" name=\"first_name\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Last Name\n                    <input type=\"text\" name=\"last_name\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Image\n                    <input type=\"text\" name=\"image\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Age\n                    <input type=\"text\" name=\"age\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Diet Type\n                    <input type=\"text\" name=\"diet_type\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Weight\n                    <input type=\"text\" name=\"weight\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Gender\n                    <select name=\"gender\" id=\"gender\" onChange={this.handleChange}>\n                        <option value=\"\"></option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select>\n                    </label> <br/>\n                    <label> Height\n                    <input type=\"text\" name=\"height\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Email\n                    <input type=\"text\" name=\"email\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Daily Calorie Goal\n                    <input type=\"text\" name=\"calorie_goal\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Bio\n                    <input type=\"text\" name=\"bio\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n    )\n    }\n}\n\nexport default SignUp\n","import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport { Chart } from \"react-google-charts\";\n// import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport api from '../services/Api'\n\n\n\n\nexport default class CalendarPage extends Component {\n  constructor(){\n    super()\n    this.state = {\n      date: new Date(),\n      weekFoodData: null,\n      weekExerciseData: null\n    }\n  }\n  \n\n  componentDidMount(){\n    let currentUserId = localStorage.getItem('id')\n    let weekFoodData = []\n    let weekExerciseData = []\n    let getWeek = () => {\n      for(let i = 0; i < 7; i++){\n        let curr = new Date();\n        let first = curr.getDate() - curr.getDay() + i \n        let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n      \n        api.getUserFoods(currentUserId, date)\n        .then(json => {\n          \n          json.data.forEach(data => {\n            let newData= {}\n            newData[\"date\"] = date\n            newData[\"calories\"] = data.attributes.calories\n            weekFoodData.push(newData)\n          })\n          this.setState({\n            weekFoodData: weekFoodData\n          })\n          // console.log(this.state.weekFoodData)\n        })\n\n        api.getUserExercises(currentUserId, date)\n        .then(json => {\n          json.data.forEach(data => {\n            let newData= {}\n            newData[\"date\"] = date\n            newData[\"calories\"] = data.attributes.calories\n            weekExerciseData.push(newData)\n            \n          })\n          this.setState({\n            weekExerciseData: weekExerciseData\n          })\n          console.log(this.state.weekExerciseData)\n        })   \n      }\n    }\n    getWeek()\n\n    }\n    \n\n \n  onChange = (date) => {\n    this.dateLink(date)\n    this.setState({ date })\n  }\n\n  dateLink = (date) => {\n    let currentDate = date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate()\n    this.props.history.push(`/daypage/${currentDate}`)\n    console.log(currentDate)\n  }\n\n  render() {\n    let graph\n  if(!this.state.weekExerciseData || !this.state.weekFoodData){\n    graph = \"Loading...\"\n  }\n  else if(!!this.state.weekExerciseData && !!this.state.weekFoodData && !this.state.weekExerciseData[0] && !this.state.weekFoodData[0]){\n    graph = \"No Data Posted!\"\n  } else {\n    let foodData = []\n    foodData.push(['Nutrient', 'Overall Calorie Intake'])\n    for(let i = 0; i < 7; i++){\n      let array = []\n      let curr = new Date\n      let first = curr.getDate() - curr.getDay() + i \n      let date = new Date(curr.setDate(first)).toISOString().slice(0, 10)\n\n      let filteredFoods = this.state.weekFoodData.filter(food => food.date === date).map(food => food.calories)\n      let filteredExercises = this.state.weekExerciseData.filter(exercise => exercise.date === date).map(exercise => exercise.calories)\n\n      let sum\n      if(!filteredFoods[0] && !filteredExercises[0]){\n        sum = 0\n      }else if(!filteredFoods[0] && !!filteredExercises[0]){\n        sum = filteredExercises.reduce((total, sum) => total + sum) * -1\n      }else if(!!filteredFoods[0] && !filteredExercises[0]){\n        sum = filteredFoods.reduce((total, sum) => total + sum)\n      } else {\n        sum = (filteredFoods.reduce((total, sum) => total + sum)) - (filteredExercises.reduce((total, sum) => total + sum))\n      }// }else {\n      //   let foodSum = filteredFoods.reduce((total, sum) => total +sum)\n      //   let exerciseSum = filteredExercises.reduce((total, sum) => total + sum)\n      //   if()\n\n      // }\n      let newDate = date.split(\"-\")[1] + \"/\" + date.split(\"-\")[2]\n      array.push(newDate)\n      array.push(sum)\n      foodData.push(array)\n      \n    }\n    \n    // console.log(foodData)\n    graph = <div className =\"bar-graph-div\">\n                <Chart\n                    width={'1285px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={foodData}\n                    options={{\n                      title: 'This Week\\'s Calorie Intake',\n                      hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                      vAxis: { title: 'Calories', minValue: 0 },\n                      // For the legend to fit, we make the chart area smaller\n                      chartArea: { width: '50%', height: '70%' },\n                      // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n    \n  }\n      \n    \n \n    return (\n      \n      <div className=\"calendar-page\">\n        <div className=\"calendar-div\">\n          <h1>Calendar Page</h1>\n          <div style = {{width: '100%'}}>\n            <Calendar className=\"calendar\"\n              onChange={this.onChange}\n              value={this.state.date}\n            />\n          </div>\n          <div>\n       \n          </div>\n        </div>\n        <div className = \"exercise-plan-container\">\n          <h3>This week's calorie intake (including burned calories)</h3>\n          <div className = \"exercise-plan-display\">\n            {graph}\n            \n          </div>\n          \n        </div>\n        <br></br><br></br>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport class Note extends Component {\n    constructor(){\n        super()\n        this.state = {\n            fields: ''\n        }\n    }\n    handleChange = (e) => {\n        this.props.handleChange(e)\n    }\n\n    handleSubmit = (event) => {\n        this.props.handleSubmit(event)\n    }\n\n    render() {\n        return (\n            <div class = \"food-note\">\n                <form onSubmit={(event) => this.handleSubmit(event)}>\n                    <label> Note: \n                    <input type=\"text\" name=\"note\" onChange= {this.handleChange}/>\n                    </label> \n                    <input type=\"Submit\" value=\"Submit\"/> \n                    \n                </form>\n            \n            </div>\n        )\n    }\n}\n\nexport default Note\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\nimport NoteForm from '../components/NoteForm'\n\nexport class FoodCard extends Component {\n    constructor(props) {\n        super();\n        this.state= {\n            deleted: false,\n            noteStatus: false,\n            note: props.food.note,\n            fields: null\n        }\n    }\n    \n    deleteFood = () => {\n        api.deleteUserFood(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true,\n                fields: {}\n            })\n        })\n    }\n\n\n    editFood = () => {\n        this.props.prop.history.push({\n            pathname: \"/editfood\",\n            state: {\n                id: this.props.id,\n                date: this.props.food.date\n            },\n            \n        })\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(this.props.id)\n        if(this.state.fields === null){\n            alert(\"Hey type something!\")\n        } else {\n            api.editFoodNote(this.state.fields, this.props.id)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        noteStatus: true,\n                        note: this.state.fields.note\n                    })\n                })\n        }\n    }\n\n    noteButton = () => {\n        this.setState({\n            note: \"\",\n            fields: null\n        })\n    }\n\n    capitalize = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n\n    render() {\n        let deleted = this.state.deleted\n        let note\n            if(this.state.note === \"\"){\n                note = <NoteForm id ={this.props.food.id} handleChange ={this.handleChange} handleSubmit = {(event) => this.handleSubmit(event)}/>\n            } else {\n                note = \n                <div className =\"food-note\">\n                    <div class = \"food-note-text\">\n                        <p>Note:</p>\n                        <p>{this.state.note}</p>\n                    </div>\n                    <button style = {{height: '5%'}}class = \"btn btn-warning\" onClick={this.noteButton}>Edit Note</button>\n                </div>\n            }\n        return (\n            deleted === false ? (\n            <div>\n                <div className=\"card input-card\">\n                    <div className =\"input-pic\">\n                        <img height = '100%' width = '100%' src = {this.props.food.image}></img>\n                    </div>\n                    <div className=\"input-text\">\n                        <p>Food Name: {this.capitalize(this.props.food.name)}</p>\n                        <p>Calories Consumed: {this.props.food.calories} calories</p>\n                        <p>Fat: {this.props.food.fat} g</p>\n                        <p>Protein: {this.props.food.protein} g</p>\n                        <p>Carbohydrates: {this.props.food.carbs} g</p>\n                        <br></br>\n                        <div>\n                            <button style= {{marginRight: '5%'}} className=\"btn btn-warning\" onClick = {this.editFood}>Edit</button>\n                            <button className=\"btn btn-danger\" onClick ={this.deleteFood}>Delete</button>\n\n                        </div>\n                        <br></br>\n                    </div>\n                </div>\n                <br></br>\n            </div>\n            ) : (\n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default FoodCard\n","import React, { Component } from 'react'\nimport FoodCard from './FoodCard'\n\n\nexport default class FoodList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.foods.map(food => <FoodCard prop = {this.props.props} key = {food.id} id = {food.id} food = {food.attributes} />)}\n            </div>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport NoteForm from '../components/NoteForm'\n\nexport class ExerciseCard extends Component {\n    constructor(props) {\n        super();\n        this.state= {\n            deleted: false,\n            noteStatus: false,\n            note: props.exercise.note,\n            fields: null\n        }\n    }\n\n    deleteExercise = () => {\n        api.deleteUserExercise(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true\n            })\n        })\n    }\n\n    editExercise = () => {\n        this.props.prop.history.push({\n            pathname: \"/editexercise\",\n            state: {\n                id: this.props.id,\n                date: this.props.exercise.date\n            }\n        })\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(this.props.id)\n        if(this.state.fields === null){\n            alert(\"Hey type something!\")\n        } else {\n            api.editExerciseNote(this.state.fields, this.props.id)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    noteStatus: true,\n                    note: this.state.fields.note\n                })\n            })\n        }\n    }\n\n    noteButton = () => {\n        this.setState({\n            note: \"\",\n            fields: null\n        })\n    }\n\n\n    render() { \n        let deleted = this.state.deleted\n        // let note\n        // if(this.state.note === \"\"){\n        //     note = <NoteForm id ={this.props.exercise.id} handleChange ={this.handleChange} handleSubmit = {(event) => this.handleSubmit(event)}/>\n        // } else {\n        //     note = <div className =\"exercise-note\">\n        //             <p>Note:</p>\n        //             <p>{this.state.note}</p>\n        //             <button onClick={this.noteButton}>Edit Note</button>\n        //         </div>     \n        // }\n        return (\n            deleted === false ? (\n            <div>\n                <div className= \"card exercise-card\">\n                    <div className=\"exercise-text\">\n                        <p>Exercise: {this.props.exercise.name}</p>\n                        <p>Calories Burned: {this.props.exercise.calories} calories burned</p>\n                    </div>\n                    <div style = {{display: 'flex'}}> \n                        <button style = {{marginRight: '5%'}} className=\"btn btn-warning\" onClick = {this.editExercise}>Edit</button>\n                        <button className=\"btn btn-danger\" onClick = {this.deleteExercise}>Delete</button>\n                    </div>\n                </div>\n            <br></br>\n            </div>\n            ) : (\n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default ExerciseCard\n","import React, { Component } from 'react'\nimport ExerciseCard from './ExerciseCard'\n\nexport class ExerciseList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.exercises.map(exercise => <ExerciseCard prop = {this.props.props} key = {exercise.id} id = {exercise.id} exercise = {exercise.attributes} />)}\n            </div>\n        )\n    }\n}\n\nexport default ExerciseList\n","import React, { Component } from 'react'\nimport api from '../services/Api'\n\nexport class NoteCard extends Component {\n    constructor() {\n        super();\n        this.state= {\n            deleted: false\n        }\n    }\n\n    deleteNote = () => {\n        api.deleteUserNote(this.props.id)\n        .then(json => {\n            console.log(json)\n            this.setState({\n                deleted: true\n            })\n        })\n    }\n\n    editNote = () => {\n        this.props.prop.history.push({\n            pathname: \"/editnote\",\n            state: {\n                id: this.props.id,\n                date: this.props.note.date\n            },\n            \n        })\n    }\n\n    render() {\n        let deleted = this.state.deleted\n        return (\n            deleted === false ? (\n            <div>\n                \n                <div className = \"card exercise-card\">\n\n                    <div className=\"exercise-text\">\n                        <p>Subject: {this.props.note.subject}</p>\n                        <p>Text: {this.props.note.text}</p>\n                    </div>\n                \n                    <div style = {{display: 'flex'}}>\n                        <button style = {{marginRight: '5%'}} className=\"btn btn-warning\" onClick = {this.editNote}>Edit</button>\n                        <button className=\"btn btn-danger\" onClick ={this.deleteNote}>Delete</button>\n                    </div>\n                </div>\n            <br></br>\n            </div>\n            \n            ) : (   \n                <h2>Deleted!</h2>\n            )\n        )\n    }\n}\n\nexport default NoteCard\n","import React, { Component } from 'react'\nimport NoteCard from './NoteCard'\n\nexport class NoteList extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.notes.map(note => <NoteCard prop = {this.props.props} key = {note.id} id = {note.id} note = {note.attributes} />)}\n            </div>\n        )\n    }\n}\n\nexport default NoteList\n","import React, { Component } from 'react'\n\n// import CanvasJSReact from '../canvasjs-2.3.2/canvasjs.react'\nimport { Chart } from \"react-google-charts\";\n\n\nexport class Graphs extends Component {\n  constructor(props){\n    super()\n    this.state = {\n      foodData: props.foodData,\n      exerciseData: props.exerciseData\n    }\n  }\n\n    render() {\n      let fatSum = this.state.foodData.fat.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let carbSum = this.state.foodData.carbs.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let proteinSum = this.state.foodData.protein.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let potassiumSum = this.state.foodData.potassium.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let sugarSum = this.state.foodData.sugar.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let sodiumSum = this.state.foodData.sodium.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let saturatedFatSum = this.state.foodData.saturated_fat.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let dietaryFiberSum = this.state.foodData.dietary_fiber.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      let cholesterolSum = this.state.foodData.cholesterol.map(food => food.data)\n      .reduce((total, sum) => total + sum)\n      console.log(potassiumSum, sugarSum, sodiumSum, saturatedFatSum, dietaryFiberSum, cholesterolSum)\n      // let caloriesBurnedSum = this.state.exerciseData.calories.map(exercise => exercise.data)\n      // .reduce((total, sum) => total + sum)\n\n      let allCalorieData = []\n      allCalorieData.push(['Time', 'Calories Consumed'])\n      let sum = 0\n      console.log(this.state.foodData.calories)\n      // let sortedExerciseData = this.state.exerciseData.calories.map(food => food * -1)\n      let sortedCalorieData = this.state.foodData.calories.sort(function (a, b) {\n  \n        return parseFloat(a.time.split(\":\").join(\"\")) - parseFloat(b.time.split(\":\").join(\"\"));\n      });\n      console.log(parseFloat(this.state.foodData.calories[0].time.split(\":\").join(\"\")))\n      console.log(sortedCalorieData)\n      \n      sortedCalorieData.map(food =>{\n        let data = []\n        let newTime = food.time.split(\":\")[0] + \":\" + food.time.split(\":\")[1]\n        data[0] = newTime\n        data[1] = food.data + sum\n        sum += food.data\n        allCalorieData.push(data)\n      })\n\n      console.log(allCalorieData)\n\n        return (\n            <div>\n              <div className =\"graphs-div\">\n                <div className =\"top-graphs-div\"> \n                  <div className= \"pie-chart-div\">\n                  <Chart\n                        width={'360px'}\n                        height={'360px'}\n                        chartType=\"PieChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={[\n                          ['Macronutrient', 'grams'],\n                          ['Fat (g)', fatSum],\n                          ['Protein (g)' , proteinSum],\n                          ['Carbs (g)', carbSum],\n                        ]}\n                        options={{\n                          title: 'Macronutrients Breakdown',\n                        }}\n                        rootProps={{ 'data-testid': '1' }}\n                      />\n                  </div>\n                  <div className = \"bar-graph-div\">\n             \n                  <Chart\n                    width={'360px'}\n                    height={'360px'}\n                    chartType=\"BarChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                      ['Nutrient', 'Daily Rec.', 'Todays Intake'],\n                      ['Potassium (mg)', 4500, potassiumSum],\n                      ['Cholesterol (mg)', 300, cholesterolSum],\n                      ['Sodium (mg)', 1500, sodiumSum]\n                  \n                    ]}\n                    options={{\n                      title: 'Nutrition Info',\n                      chartArea: { width: '50%' },\n                      hAxis: {\n                        title: 'Total Amount',\n                        minValue: 0,\n                        maxValue: 5000\n                      },\n                      vAxis: {\n                        title: 'Nutrient',\n                      },\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                <div className = \"bar-graph-div\">\n             \n                  <Chart\n                    width={'360px'}\n                    height={'360px'}\n                    chartType=\"BarChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                      ['Nutrient', 'Daily Rec.', 'Todays Intake'],\n                      ['Sugar (g)', 30, sugarSum ],\n                      ['Saturated Fat (g)', 13, saturatedFatSum],\n                      ['Dietary Fiber (g)', 30, dietaryFiberSum]\n                  \n                    ]}\n                    options={{\n                      title: 'Nutrition Info',\n                      chartArea: { width: '50%' },\n                      hAxis: {\n                        title: 'Total Amount',\n                        minValue: 0,\n                        maxValue: 150\n                      },\n                      vAxis: {\n                        title: 'Nutrient',\n                      },\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                \n                \n                <br></br>\n                </div>\n                  <br></br>\n                <div className =\"bottom-graphs-div\">\n                  <Chart\n                    width={'1080px'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={allCalorieData}\n                    options={{\n                      title: 'Calories Intake Breakdown',\n                      hAxis: { title: 'Time of Day', titleTextStyle: { color: '#333' } },\n                      vAxis: { title: 'Calories', minValue: 0 },\n                      // For the legend to fit, we make the chart area smaller\n                      chartArea: { width: '50%', height: '70%' },\n                      // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                  />\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Graphs\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom';\nimport FoodList from '../components/FoodList'\nimport ExerciseList from '../components/ExerciseList'\nimport NoteList from '../components/NoteList'\nimport Graphs from '../components/Graphs'\n\nexport class DayPage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            dayExercises: null,\n            breakfastFoods: null,\n            lunchFoods: null,\n            dinnerFoods: null,\n            dayNotes: null,\n            dateParams: props.match.params.date,\n            foodData: null,\n            currentUser: props.currentUser\n            \n        }\n    }\n\n    componentDidMount(){\n        let currentUserId = localStorage.getItem('id')\n        let dateParams = this.state.dateParams\n            api.getUserFoods(currentUserId, dateParams)\n            .then(json => {\n                console.log(json.data)\n                let breakfastFoods = json.data.filter(food => food.attributes.meal === 'breakfast')\n                let lunchFoods = json.data.filter(food => food.attributes.meal === 'lunch')\n                let dinnerFoods = json.data.filter(food => food.attributes.meal === 'dinner')\n                let foodData = {\n                    calories: json.data.map((food)=>{\n                        let caloriesHash = {}\n                        caloriesHash['data'] = food.attributes.calories\n                        caloriesHash['time'] = food.attributes.time\n                        return caloriesHash\n                    }),\n                    fat: json.data.map((food)=>{\n                        let fatHash = {}\n                        fatHash['data'] = food.attributes.fat\n                        return fatHash\n                    }),\n                    protein: json.data.map((food)=>{\n                        let proteinHash = {}\n                        proteinHash['data'] = food.attributes.protein\n                        return proteinHash\n                    }),\n                    carbs: json.data.map((food)=>{\n                        let carbHash = {}\n                        carbHash['data'] = food.attributes.carbs\n                        \n                        return carbHash\n                    }),\n                    potassium: json.data.map((food)=>{\n                        let potassiumHash = {}\n                        potassiumHash['data'] = food.attributes.potassium\n                        return potassiumHash\n                    }),\n                    sugar: json.data.map((food)=>{\n                        let sugarHash = {}\n                        sugarHash['data'] = food.attributes.sugar\n                        return sugarHash\n                    }),\n                    sodium: json.data.map((food)=>{\n                        let sodiumHash = {}\n                        sodiumHash['data'] = food.attributes.sodium\n                        return sodiumHash\n                    }),\n                    saturated_fat: json.data.map((food)=>{\n                        let saturated_fatHash = {}\n                        saturated_fatHash['data'] = food.attributes.saturated_fat\n                        return saturated_fatHash\n                    }),\n                    dietary_fiber: json.data.map((food)=>{\n                        let dietary_fiberHash = {}\n                        dietary_fiberHash['data'] = food.attributes.dietary_fiber\n                        return dietary_fiberHash\n                    }),\n                    cholesterol: json.data.map((food)=>{\n                        let cholesterolHash = {}\n                        cholesterolHash['data'] = food.attributes.cholesterol\n                        return cholesterolHash\n                    })\n                }\n            this.setState({\n                breakfastFoods: breakfastFoods,\n                lunchFoods: lunchFoods,\n                dinnerFoods: dinnerFoods,\n                foodData: foodData,\n            })\n            console.log(foodData)\n        })\n\n        api.getUserExercises(currentUserId, dateParams)\n        .then(json => {\n            console.log(json.data)\n            let exerciseData = json.data.map(food => food.attributes.calories)\n            this.setState({\n                dayExercises: json.data,\n                exerciseData: exerciseData,\n            })\n            \n        })\n\n        api.getUserNotes(currentUserId, dateParams)\n        .then(json => {\n            console.log(json.data)\n            this.setState({\n                dayNotes: json.data,\n            })\n        })            \n    }\n\n    render() {\n        let breakfastFoods\n        let lunchFoods\n        let dinnerFoods\n        let dayExercises\n        let dayNotes\n        let foodgraphs\n        let caloriesBurned\n        let dateSplit = this.props.match.params.date.split('-')\n        let day = dateSplit[1].length === 2 ? dateSplit[1] : '0' + dateSplit[1]\n        let month = dateSplit[2].length === 2 ? dateSplit[2] : '0' + dateSplit[2]\n        let year = dateSplit[0]\n        let date = `${day}/${month}/${year}`\n        \n        \n            if (!!this.state.dayExercises && !this.state.dayExercises[0]){\n                dayExercises = \"No Exercises Posted\"\n            } else if(!!this.state.dayExercises && !!this.state.dayExercises[0]){\n                dayExercises = <ExerciseList props = {this.props} exercises = {this.state.dayExercises}/>\n            } \n\n            if (!!this.state.breakfastFoods && !this.state.breakfastFoods[0]){\n                breakfastFoods = \"No Breakfast Items Posted\"\n            } else if(!!this.state.breakfastFoods && !!this.state.breakfastFoods[0]){\n                console.log(this.state.breakfastFoods)\n                breakfastFoods = <FoodList props = {this.props} foods ={this.state.breakfastFoods}/>\n            } \n            \n            if (!!this.state.lunchFoods && !this.state.lunchFoods[0]){\n                lunchFoods = \"No Lunch Items Posted\"\n            } else if(!!this.state.lunchFoods && !!this.state.lunchFoods[0]){\n                console.log(this.state.lunchFoods)\n                lunchFoods = <FoodList props = {this.props} foods ={this.state.lunchFoods}/>\n            } \n\n            if (!!this.state.dinnerFoods && !this.state.dinnerFoods[0]){\n                dinnerFoods = \"No Dinner Items Posted\"\n            } else if(!!this.state.dinnerFoods && !!this.state.dinnerFoods[0]){\n                console.log(this.state.dinnerFoods)\n                dinnerFoods = <FoodList props = {this.props} foods ={this.state.dinnerFoods}/>\n            } \n\n            if (!!this.state.dayNotes && !this.state.dayNotes[0]){\n                dayNotes = \"No Notes Posted\"\n            } else if(!!this.state.dayNotes && !!this.state.dayNotes[0]){\n                dayNotes = <NoteList props = {this.props} notes = {this.state.dayNotes}/>\n            } \n\n\n            if(!this.state.foodData){\n                foodgraphs = \"Loading\"\n            } else if (!!this.state.foodData && !this.state.foodData.calories[0]){\n                foodgraphs = <h3>No Foods Posted</h3>\n            } else {\n                foodgraphs = <Graphs exerciseData = {this.state.exerciseData} foodData = {this.state.foodData}/>\n            }\n\n            if(!this.state.exerciseData){\n                caloriesBurned = \"Loading\"\n            } else if (!!this.state.exerciseData && !this.state.exerciseData[0]){\n                caloriesBurned = \"No Exercises Posted\"\n            } else {\n                let sum = this.state.exerciseData.reduce((total, sum) => total + sum)\n                caloriesBurned = `${sum} calories`\n            }\n            console.log(this.state.currentUser)\n        return (\n        <div>\n            <div className = \"container\">\n\n                <div style = {{width: '100%', display: 'flex', justifyContent:'center'}}>\n                    <div class = \"date-header\">\n                        <h1>{date}</h1>  \n                    </div>\n                </div>\n                <div className=\"top-section\">\n                    <div className =\"graph-section\">\n                        <h2 style = {{marginBottom: '5%'}}>Graphs</h2>\n                        {foodgraphs}\n                    </div>\n                    <div className =\"exercise-data-div\">\n                        <h1>Calories Burned Today:</h1>\n                        <h3>{caloriesBurned}</h3>\n                    </div>\n                    \n                </div>\n\n                <div className = \"track-container-meal\">\n                    <div className = \"track-box\">\n                        <div className=\"food-header\">\n                            <h3>Breakfast</h3>\n                            <div className=\"food-add\">\n                                <Link className=\"btn btn-light\" to={{pathname: '/postfood',\n                                    state: {\n                                        date: this.props.match.params,\n                                        meal: 'breakfast'\n                                    }\n                                }}>+</Link> \n                            </div>\n                        </div>\n                        <div className=\"displayFood\">\n                            {breakfastFoods}\n                        </div> \n                    </div>\n            \n                    <div className=\"track-box\">\n                        <div className= \"food-header\">\n                            <h3>Lunch</h3>\n                            <div className=\"food-add\">\n                                <Link className =\"btn btn-light\" to={{pathname: '/postfood',\n                                    state: {\n                                        date: this.props.match.params,\n                                        meal: 'lunch'\n                                    }\n                                }}>+</Link>\n                            </div>\n                        </div>\n                        <div className=\"displayFood\">\n                            {lunchFoods}\n                        </div>\n                    </div>\n\n                    <div className=\"track-box\">\n                        <div className= \"food-header\">\n                            <h3>Dinner</h3>\n                            <div className=\"food-add\">\n                                <Link className = \"btn btn-light\" to={{pathname: '/postfood',\n                                    state: {\n                                        date: this.props.match.params,\n                                        meal: 'dinner'\n                                    }\n                                }}> + </Link>\n                            </div>\n                        </div>\n                        <div className=\"displayFood\">\n                            {dinnerFoods}\n                        </div>\n                    </div>\n                </div>\n\n                <div className= \"track-container-exercise\">\n                            <div className=\"track-box\">\n                                <h2>Exercise Entries</h2>\n                                <div className=\"displayExercise\">\n                                    {dayExercises}\n                                </div>\n                                <br></br>\n                                <Link className=\"btn btn-light\" to={{pathname: '/postexercise',\n                                    state: {\n                                        date: this.props.match.params\n                                    }\n                                }}>Post Exercise</Link>\n                                \n                    </div>\n                </div>\n\n                <div className = \"track-container\">\n                    <div className=\"track-box\">\n                        <h2>Notes</h2>\n                        <div className=\"displayNote\">\n                            {dayNotes}\n                        </div>\n                        <br></br>\n                        <Link className = \"btn btn-light\" to={{pathname: '/postnote',\n                            state: {\n                                date: this.props.match.params\n                            }\n                        }}>Post Note</Link>\n                        <br></br>\n                    </div>\n                    \n                </div>\n            </div>\n            \n            <br></br><br></br>\n        </div>\n        )\n    }\n}\n\nexport default DayPage\n","import React, {useState, useEffect} from 'react'\n\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nvar SpeechGrammarList = window.SpeechGrammarList || window.webkitSpeechGrammarList\nvar SpeechRecognitionEvent = window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent\n\nconst grammar = '#JSGF V1.0; grammar numbers; public <number> = one | two | three | four | five | six | seven | eight| nine | ten ;'\nvar recognition = new SpeechRecognition()\nvar speechRecognitionList = new SpeechGrammarList()\nspeechRecognitionList.addFromString(grammar, 1)\nrecognition.grammars = speechRecognitionList\nrecognition.continuous = false;\nrecognition.lang = 'en-US';\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 1;\n\nconst RecordButton = (props) => {\n    \n    let[buttonClass, setButtonClass] = useState('pulsate')\n\n    let startSpeechToText = () => {\n        recognition.start()\n        setButtonClass('recording-pulsate')\n    }\n\n    recognition.onresult = (event) => {\n        console.log(props.type)\n        var text = event.results[0][0].transcript\n        var confidence = event.results[0][0].confidence\n        props.setResults(text, confidence, props.type)\n    }\n    \n    recognition.onspeechend = () => {\n        recognition.stop()\n        setButtonClass('pulsate')\n    }\n\n    return (\n        <div class = \"record-box\">\n            <button class = {`${buttonClass}`} type = 'button' onClick = {startSpeechToText}></button>\n        </div>\n    )\n}\n\nexport default RecordButton","import React, { Component, useState, useEffect } from 'react'\nimport api from '../services/Api'\nimport RecordButton from '../components/RecordButton'\nimport { Link } from 'react-router-dom'\n\nconst PostPage = (props) => {\n\n    let[fields, setFields] = useState({})\n    let[date, setDate] = useState(null)\n    let[meal, setMeal] = useState(null)\n    let[posted, setPosted] = useState(false)\n    let[menu, setMenu] = useState('')\n    let[recordSelect, setRecordSelect] = useState('subject')\n    let[text, setText] = useState('')\n    let[confidence, setConfidence] = useState('')\n    let[type, setType] = useState('')\n\n    let handleMenu = (e) => {\n        setMenu(e.target.value)\n    }\n\n    let handleMeal = (e) => {\n        setMeal(e.target.value)\n    }\n\n    let handleRecordSelect = (e) => {\n        console.log(e.target.value, recordSelect)\n        setRecordSelect(e.target.value)\n    }\n\n    let setRecordResults = (text, confidence, type) => {\n        console.log(type)\n        let newFields = { ...fields, [type]: text };\n        setFields(newFields)\n        setConfidence(confidence)\n        setType(type)\n    }\n\n    let handleChange = (e) => {\n        const newFields = { ...fields, [e.target.name]: e.target.value };\n        setFields( newFields );\n        console.log(fields)\n    }\n\n    let postNote = (event, subject, text, user, date) => {\n        event.preventDefault()\n        if(!date || !subject || !text){\n            alert(\"Please Fill In Required Fields!\")\n        } else {\n            let splitDate = date.split('-')\n            api.postUserNote(subject, text, user, date)\n            .then(json => {\n                console.log(json)\n                setPosted(true)\n                setDate(`${splitDate[0]}-${splitDate[1].split('')[1]}-${splitDate[2].split('')[1]}`)\n            })\n        }\n    }\n\n    let postFood = (event, query, user, date, meal) => {\n        event.preventDefault()\n        if(!date || !query || !meal || (!date && !query && !meal)){\n            console.log(date, query, meal)\n            alert(\"Please Fill In Required Fields!\")\n        } else {\n            let splitDate = date.split('-')\n            console.log(date, user, query, meal)\n        api.nutritionixGetFood(query)\n            .then(json => {\n                json.foods.forEach(food => {\n                    var today = new Date();\n                    var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                    console.log(time)\n                    api.postUserFood(food, user, meal, date, time)\n                    .then(json => {\n                        console.log(json)\n                        setPosted(true)\n                        setDate(`${splitDate[0]}-${splitDate[1].split('')[1]}-${splitDate[2].split('')[1]}`)\n                    })\n                })\n                console.log(json)\n            })\n        } \n    }\n\n    let postExercise = (event, query, user, date) => {\n        event.preventDefault()\n        if(!query || !date){\n            alert(\"Please Fill In Required Fields!\")\n        } else{ \n        api.nutritionixGetExercise(query, user)\n            .then(json => {\n                json.exercises.forEach(exercise => {\n                    let splitDate = date.split('-')\n                    let today = new Date();\n                    var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                    api.postUserExercise(exercise, user, date, time)\n                    .then(json => {\n                        console.log(json)\n                        setPosted(true)\n                        setDate(`${splitDate[0]}-${splitDate[1].split('')[1]}-${splitDate[2].split('')[1]}`)\n                    })\n                })\n                console.log(json)\n            })\n        }\n    }\n\n    \n        let currentMenu\n        let link\n        if (menu === \"food\"){\n        currentMenu = \n        <div>\n            <form className=\"userForm\" onSubmit={(event) => postFood(event, fields.food, props.currentUser, fields.date, meal)}>\n                <h3 style = {{marginBottom: '4%'}}>Submit a food post</h3>\n                <label> Select Meal:\n                <select onChange ={handleMeal} name=\"meal\" id=\"meal-select\">\n                    <option value=\"\">Select Category</option>\n                    <option value=\"breakfast\">Breakfast</option>\n                    <option value=\"lunch\">Lunch</option>\n                    <option value=\"dinner\">Dinner</option>\n                </select>\n                </label>\n                <br></br>\n                <label> Date:\n                    <input onChange={handleChange} type=\"date\" name=\"date\" /> \n                </label> <br/>\n                <div class = 'record-row'>\n                    <label> Post Food:\n                        <input type = \"text\" value = {fields.food} name=\"food\" onChange={handleChange}/>\n                    </label>\n                    <RecordButton type = \"food\" setResults = {setRecordResults}/>\n                </div>\n                <h5 style = {{marginTop: '5%', fontStyle: 'italic'}}>To record press the red button and speak into your microphone</h5>\n                <br></br>\n                <input className = \"btn btn-light\" type=\"submit\" value=\"Submit\" />\n            </form>\n            \n        </div>\n        } else if (menu === \"exercise\") {\n        currentMenu = \n        <div>\n            <form className=\"userForm\" onSubmit={(event) => postExercise(event, fields.exercise, props.currentUser, fields.date)}>\n                <h3 style = {{marginBottom: '4%'}}>Submit an exercise post</h3>\n                <label> Date:\n                    <input onChange={handleChange} type=\"date\" name=\"date\" /> \n                </label> <br/>\n                <div className = \"record-row\">\n                    <label> Post Exercise:\n                        <input type=\"text\" value = {fields.exercise} name=\"exercise\" onChange={handleChange}/>\n                    </label>\n                    <RecordButton type = \"exercise\" setResults = {setRecordResults}/>\n                </div>\n                <h5 style = {{marginTop: '5%', fontStyle: 'italic'}}>To record press the red button and speak into your microphone</h5>\n                <br></br>\n                <input className = \"btn btn-light\" type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n        }\n        else if (menu === \"note\") {\n            currentMenu = \n            <div>\n                <form className=\"userForm\" onSubmit={(event) => postNote(event, fields.subject, fields.text, props.currentUser, fields.date)}>\n                    <h3 style = {{marginBottom: '4%'}}>Add a note</h3>\n                    <label> Date:\n                        <input onChange={handleChange} type=\"date\" name=\"date\" /> \n                    </label> <br/>\n                    <label> Heading:\n                        <input value = {fields.subject} type=\"text\" name=\"subject\" onChange={handleChange}/>\n                    </label>\n                    <br></br>\n                    <label> Text:\n                        <input value = {fields.text} type=\"text\" name=\"text\" onChange={handleChange}/>\n                    </label>\n                    <div className = \"record-row\">\n                        <select onChange ={handleRecordSelect} name=\"record_select\" id=\"record-select\">\n                            <option value=\"subject\">Record Subject</option>\n                            <option value=\"text\">Record Text</option>\n                        </select>\n                        <RecordButton type = {recordSelect} setResults = {setRecordResults}/>\n                    </div>\n                    <h5 style = {{marginTop: '5%', fontStyle: 'italic'}}>To record press the red button and speak into your microphone</h5>\n                    <br></br>\n                    <input className = \"btn btn-light\" type=\"submit\" value=\"Submit\" />\n                </form>\n\n            </div>\n        }\n\n        if(!posted){\n            link = null\n        } else {\n            link =  <Link to={`/daypage/${date}`}>Go to {date}</Link> \n        }\n\n\n        return (\n            <div class= \"post-page\">\n                {posted ? <h2>Posted!</h2> : null}\n                <div className = \"container\">\n                \n                <h1 style = {{marginBottom: \"5%\"}}>Post with Speech to Text</h1>\n                <div className = \"speechPostDiv\">\n                    <h2 style = {{marginBottom: \"5%\"}}>Select a category</h2>\n                    <select onChange ={handleMenu} name=\"menu\">\n                        <option value=\"\">Select Category</option>\n                        <option value=\"food\">Food</option>\n                        <option value=\"exercise\">Exercise</option>\n                        <option value=\"note\">Note</option>\n                    </select>\n                    <br></br>\n                    <br></br>\n                    \n                    {currentMenu}\n                    <br></br>\n                    \n                    {confidence ? \n                        <div>\n                            <div>\n                                {`Confidence level ${confidence}`}\n                                <br></br>\n                                {`Recorded for ${type}`}\n                            </div>\n                            \n                        </div> \n                    :\n                    null   \n                    }\n                    <br></br>\n                    {link}\n                </div>\n                </div>\n            </div>\n        )\n    \n}\n\nexport default PostPage\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\n\nexport class PostExercise extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            exerciseInput: '',\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n\n    postExercise = (event, query, user) => {\n        event.preventDefault()\n        api.nutritionixGetExercise(query, user)\n        .then(json => {\n            json.exercises.forEach(exercise => {\n                let today = new Date();\n                var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                api.postUserExercise(exercise, user, this.state.date, time)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        posted: true\n                    })\n                })\n            })\n            console.log(json)\n        })\n    }\n\n    render(){\n       \n        return (\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post an Exercise!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event)=> this.postExercise(event, this.state.exerciseInput, this.props.currentUser)} >\n                        <p>Submit an exercise post in plain English!</p>\n                        <label> Exercise\n                        <input type=\"text\" name=\"exerciseInput\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostExercise\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\n\nexport class PostNotePage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            fields: {},\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        let newFields = {...this.state.fields, [e.target.name]: e.target.value}\n        this.setState({\n            fields: newFields\n        })\n        console.log(this.state)\n    }\n\n    postNote = (event,subject, text, user) => {\n        event.preventDefault()\n            api.postUserNote(subject, text, user, this.state.date)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    posted: true\n                })\n            })\n    }\n    render() {\n        \n        return (\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post an Note!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event) => this.postNote(event, this.state.fields.subject, this.state.fields.text, this.props.currentUser)}>\n                        <label> Heading:\n                        <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <label> Text:\n                        <input type=\"text\" name=\"text\" onChange={this.handleChange}/>\n                        </label> <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostNotePage\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../services/Api'\n\nexport class PostPage extends Component {\n    constructor(props){\n        super()\n        this.state = {\n            error: false,\n            meal: props.location.state.meal,\n            date: props.location.state.date.date,\n            posted: false\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ \n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    postFood = (event, query, user) => {\n        event.preventDefault()\n        api.nutritionixGetFood(query, user)\n        .then(json => {\n            json.foods.forEach(food => {\n                var today = new Date();\n                var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0':'') + today.getMinutes() + \":\" + (today.getSeconds()< 10 ? '0':'') + today.getSeconds()\n                console.log(time)\n                api.postUserFood(food, user, this.state.meal, this.state.date, time)\n                .then(json => {\n                    console.log(json)\n                    this.setState({\n                        posted: true\n                    })\n                })\n            })\n            console.log(json)\n        })\n    } \n\n    render() {\n        let meal\n            if (this.state.meal === 'breakfast'){\n                meal = \"Breakfast\"\n            } else if (this.state.meal === 'lunch'){\n                meal = \"Lunch\"\n            } else if (this.state.meal === 'dinner'){\n                meal = \"Dinner\"\n            }\n        \n        return (\n\n            <div>\n                <div>\n                    <div className=\"form\">\n                        <h1> Post a {meal} Item!</h1>\n                        {this.state.posted ? <h2>Posted!</h2> : null}\n                        <form className=\"userForm\" onSubmit={(event) => this.postFood(event, this.state.foodInput, this.props.currentUser, this.state.meal)}>\n                        <p>Submit a food post in plain English!</p>\n                        <label> Post Food\n                        <input type=\"text\" name=\"foodInput\" onChange={this.handleChange}/>\n                        </label>\n                         <br/>\n                        <input type=\"submit\" value=\"Submit\" />\n                        </form>\n                    </div>\n                    <br></br>\n                    <Link to={`/daypage/${this.state.date}`}>Go back to {this.state.date}</Link>                \n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default PostPage\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class ExerciseEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        \n        api.editUserExercise(this.state.fields, id)\n        .then(json => {\n            this.setState({\n                editState: true\n            })\n            console.log(json)\n        })\n        console.log(id)\n    }\n    render() {\n        return (\n            <div>\n                <h1>Edit Exercise</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"exerciseEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Name: \n                    <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Calories Burned: \n                    <input type=\"text\" name=\"calories\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label>Unit: \n                    <input type=\"text\" name=\"unit\" onChange={this.handleChange}/> <br/>\n                    </label>\n                    <label> Unit Number: \n                    <input type=\"text\" name=\"unit_number\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link>\n            </div>\n        )\n    }\n}\n\nexport default ExerciseEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class NoteEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        api.editUserNote(this.state.fields, id)\n        .then(json => {\n            console.log(json)\n            console.log(this.props)\n            this.setState({\n                editState: true\n            })\n        })\n        console.log(id)\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <h1>Edit Note</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"noteEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Username\n                    <input type=\"text\" name=\"subject\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Password\n                    <input type=\"text\" name=\"text\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link> \n\n            </div>\n            \n        )\n    }\n}\n\nexport default NoteEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class FoodEdit extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state) \n    }\n\n    handleSubmit = (event, id) => {\n        console.log(id)\n        event.preventDefault()\n        api.editUserFood(this.state.fields, id)\n        .then(json => {\n            this.setState({\n                editState: true\n            })\n            console.log(json)\n        })\n        console.log(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Edit Food</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"foodEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Name:\n                    <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n                    </label> <br/>\n                    <label> Calories Consumed:\n                    <input type=\"text\" name=\"calories\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Fat:\n                    <input type=\"text\" name=\"fat\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Protein:\n                    <input type=\"text\" name=\"protein\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Carbs:\n                    <input type=\"text\" name=\"carbs\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Potassium:\n                    <input type=\"text\" name=\"potassium\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Sugar:\n                    <input type=\"text\" name=\"sugar\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Sodium:\n                    <input type=\"text\" name=\"sodium\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Saturated Fat:\n                    <input type=\"text\" name=\"saturated_fat\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Cholesterol:\n                    <input type=\"text\" name=\"cholesterol\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Dietary Fiber:\n                    <input type=\"text\" name=\"dietary_fiber\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/daypage/${this.props.location.state.date}`}>Go back to {this.props.location.state.date}</Link>\n            </div>\n        )\n    }\n}\n\nexport default FoodEdit\n","import React, { Component } from 'react'\nimport api from '../services/Api'\nimport { Link } from 'react-router-dom'\n\nexport class EditUser extends Component {\n    constructor() {\n        super();\n        this.state= {\n            error: false,\n            fields: {},\n            editState: false\n        }\n    }\n\n    handleChange = (e) => {\n        const newFields = { ...this.state.fields, [e.target.name]: e.target.value };\n        this.setState({ fields: newFields });\n        console.log(this.state)\n    }\n\n    handleSubmit = (event, id) => {\n        event.preventDefault()\n        api.editUser(this.state.fields, id)\n        .then(json => {\n            console.log(json)\n            console.log(this.props)\n            this.setState({\n                editState: true\n            })\n        })\n        console.log(id)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Edit User Info</h1>\n                {this.state.editState ? <h2>Editted!</h2> : null}\n                <form className=\"foodEditForm\" onSubmit={(event) => this.handleSubmit(event, this.props.location.state.id)}>\n                    <label> Username:\n                    <input type=\"text\" name=\"username\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Weight:\n                    <input type=\"text\" name=\"weight\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Height:\n                    <input type=\"text\" name=\"height\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Calorie Goal:\n                    <input type=\"text\" name=\"calorie_goal\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Diet:\n                    <input type=\"text\" name=\"diet_type\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Image:\n                    <input type=\"text\" name=\"image\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <label> Bio:\n                    <input type=\"text\" name=\"bio\" onChange={this.handleChange}/> \n                    </label> <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <br></br>\n                <Link to={`/profile`}>Go back to Profile Page</Link>\n            </div>\n        )\n    }\n}\n\nexport default EditUser\n","import React, {Component} from 'react';\nimport './App.css';\nimport api from './services/Api.js'\nimport {\n  HashRouter as Router,\n  Route\n} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport ProfilePage from './containers/ProfilePage';\nimport About from './components/About'\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport CalendarPage from './containers/CalendarPage'\nimport DayPage from './containers/DayPage'\nimport PostPage from './containers/PostPage'\nimport PostExercise from './containers/PostExercise'\nimport PostNote from './containers/PostNote'\nimport PostFood from './containers/PostFood'\nimport EditExercise from './components/EditExercise'\nimport EditNote from './components/EditNote'\nimport EditFood from './components/EditFood'\nimport EditUser from './components/EditUser'\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super()\n  this.state = {\n    currentUser: {},\n    current_date: null\n  }\n}\n\ncomponentDidMount() {\n  let today = new Date()\n  let currentDate = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()\n  this.setState({\n    current_date: currentDate\n  })\n  const token = localStorage.getItem('token');\n  if(token) {\n    api.getCurrentUser().then(json => {\n      this.setState({ currentUser: json.user.data});\n      console.log(json)\n    });\n  }\n}\n\nhandleLogin = json => {\n  const currentUser = json;\n  console.log(currentUser)\n  localStorage.setItem('token', currentUser.jwt );\n  localStorage.setItem('id', currentUser.user.data.id)\n  this.setState({ currentUser: {username: currentUser.user.data.attributes.username, id: currentUser.user.data.id }});\n}\n\nhandleLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('id');\n  this.setState({ currentUser: {} })\n  \n};\n// notes for test\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">  \n          <Router basename = \"/\">\n            <div className='app'>\n            <NavBar handleLogout={this.handleLogout} currentUser = {this.state.currentUser} currentDate = {this.state.current_date}/>\n            <Route exact path =\"/\" render={(props) => <About {...props} currentuser ={this.state.currentUser}/>} />\n            <Route exact path =\"/about\" render={(props) => <About {...props} currentuser ={this.state.currentUser}/>} />\n            <Route exact path=\"/login\" render={(props) => <Login {...props} handleLogin={this.handleLogin} currentDate = {this.state.current_date}/>} />\n            <Route exact path=\"/signup\" render={(props) => <SignUp {...props} handleLogin={this.handleLogin} currentDate = {this.state.current_date}/>} />\n            <Route exact path=\"/profile\" render ={(props) => <ProfilePage {...props} handleLogout={this.handleLogout} currentUser={this.state.currentUser}/>} />\n            <Route exact path=\"/daypage/:date\" render = {(props) => <DayPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/calendar\" render = {(props) => <CalendarPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/post\" render = {(props) => <PostPage {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/postfood\" render = {(props) => <PostFood {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/postexercise\" render = {(props) => <PostExercise {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/postnote\" render = {(props) => <PostNote {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/editfood\" render = {(props) => <EditFood {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/editexercise\" render = {(props) => <EditExercise {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/editnote\" render = {(props) => <EditNote {...props} currentUser = {this.state.currentUser}/>}/>\n            <Route exact path=\"/edituser\" render = {(props) => <EditUser {...props} currentUser = {this.state.currentUser}/>}/>\n            </div>\n          </Router>\n      </header>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}